{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { ServerState } from './store/server.state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngxs/store\";\nimport * as i2 from \"@angular/router\";\nexport let HomeserverInterceptor = /*#__PURE__*/(() => {\n  var _class;\n  class HomeserverInterceptor {\n    constructor(store, router) {\n      this.store = store;\n      this.router = router;\n    }\n    intercept(request, next) {\n      const serverUrl = this.store.selectSnapshot(ServerState.url);\n      if (serverUrl) {\n        const urlParts = request.url.split('/');\n        urlParts[0] = serverUrl;\n        const url = urlParts.join('/');\n        const clone = request.clone({\n          url: url\n        });\n        return next.handle(clone);\n      } else {\n        this.router.navigate(['']);\n        return throwError(() => new Error('No server URL set'));\n      }\n    }\n  }\n  _class = HomeserverInterceptor;\n  _class.ɵfac = function HomeserverInterceptor_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return HomeserverInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}