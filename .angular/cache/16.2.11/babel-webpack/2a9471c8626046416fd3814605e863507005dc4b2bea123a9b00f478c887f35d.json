{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { catchError, of, take, tap } from 'rxjs';\nimport { ServerState } from 'src/app/store/server.state';\nimport { SetServerUrl } from 'src/app/store/server.state.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ngxs/store\";\nimport * as i3 from \"@receipt-wrangler/receipt-wrangler-core\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"../../shared-ui/input/input.component\";\nimport * as i7 from \"../../shared-ui/button/button.component\";\nexport let SetHomeserverComponent = /*#__PURE__*/(() => {\n  var _class;\n  class SetHomeserverComponent {\n    constructor(formBuilder, store, featureConfigService, router, snackbarService) {\n      this.formBuilder = formBuilder;\n      this.store = store;\n      this.featureConfigService = featureConfigService;\n      this.router = router;\n      this.snackbarService = snackbarService;\n      this.form = new FormGroup({});\n    }\n    ngOnInit() {\n      this.initForm();\n    }\n    initForm() {\n      this.form.addControl('url', this.formBuilder.control(this.store.selectSnapshot(ServerState.url), {\n        validators: [Validators.required]\n      }));\n    }\n    submit() {\n      if (this.form.valid) {\n        this.store.dispatch(new SetServerUrl(this.form.value.url));\n        this.featureConfigService.getFeatureConfig().pipe(take(1), tap(() => {\n          this.snackbarService.success('Successfully connected to server');\n          this.router.navigate(['/auth', 'login']);\n        }), catchError(err => {\n          this.snackbarService.error(\"Couldn't connect to server\");\n          this.store.dispatch(new SetServerUrl(''));\n          return of(err);\n        })).subscribe();\n      }\n    }\n  }\n  _class = SetHomeserverComponent;\n  _class.ɵfac = function SetHomeserverComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Store), i0.ɵɵdirectiveInject(i3.FeatureConfigService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i3.SnackbarService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-set-homeserver\"]],\n    decls: 10,\n    vars: 5,\n    consts: [[1, \"ion-padding\"], [1, \"d-flex\", \"ion-align-items-center\", \"ion-justify-content-center\", \"w-100\", \"h-100\"], [1, \"w-100\", 3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\", \"flex-column\"], [\"label\", \"Homeserver Url\", 1, \"mb-2\", 3, \"inputFormControl\"], [1, \"w-100\", \"d-flex\", \"flex-column\"], [\"expand\", \"block\", \"buttonText\", \"Next\", \"type\", \"submit\"]],\n    template: function SetHomeserverComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function SetHomeserverComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Set Homeserver URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"wrangler-mobile-input\", 4);\n        i0.ɵɵpipe(7, \"formGet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelement(9, \"wrangler-mobile-button\", 6);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"inputFormControl\", i0.ɵɵpipeBind2(7, 2, ctx.form, \"url\"));\n      }\n    },\n    dependencies: [i5.IonContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.InputComponent, i7.ButtonComponent, i3.FormGetPipe]\n  });\n  return SetHomeserverComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}