var AuthState_1;
import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { Action, createSelector, Selector, State, } from '@ngxs/store';
import { User } from '../api/model/user';
import { Logout, SetAuthState, SetUserPreferences } from './auth.state.actions';
import * as i0 from "@angular/core";
let AuthState = AuthState_1 = class AuthState {
    static userPreferences(state) {
        return state.userPreferences;
    }
    static userRole(state) {
        return state.userRole ?? '';
    }
    static isLoggedIn(state) {
        return !AuthState_1.isTokenExpired(state);
    }
    static userId(state) {
        return state.userId ?? '';
    }
    static isTokenExpired(state) {
        if (state.expirationDate) {
            return new Date() >= new Date(Number(state.expirationDate) * 1000);
        }
        else {
            return true;
        }
    }
    static loggedInUser(state) {
        return {
            defaultAvatarColor: state.defaultAvatarColor ?? '',
            displayName: state.displayname ?? '',
            id: Number(state.userId) ?? '',
            username: state.username ?? '',
        };
    }
    static hasRole(role) {
        return createSelector([AuthState_1], (state) => {
            return state.userRole === role;
        });
    }
    setAuthState({ getState, patchState }, payload) {
        const claims = payload.userClaims;
        patchState({
            defaultAvatarColor: claims['DefaultAvatarColor'],
            displayname: claims['Displayname'],
            expirationDate: claims['exp']?.toString(),
            userId: claims['UserId']?.toString(),
            username: claims['Username'],
            userRole: claims['UserRole'],
        });
    }
    logout({ getState, patchState }) {
        patchState({
            defaultAvatarColor: '',
            displayname: '',
            expirationDate: '',
            userId: '',
            username: '',
            userRole: undefined,
            userPreferences: undefined,
        });
    }
    setUserPreferences({ patchState }, payload) {
        patchState({
            userPreferences: payload.userPreferences,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: AuthState, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: AuthState }); }
};
__decorate([
    Action(SetAuthState),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, SetAuthState]),
    __metadata("design:returntype", void 0)
], AuthState.prototype, "setAuthState", null);
__decorate([
    Action(Logout),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], AuthState.prototype, "logout", null);
__decorate([
    Action(SetUserPreferences),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, SetUserPreferences]),
    __metadata("design:returntype", void 0)
], AuthState.prototype, "setUserPreferences", null);
__decorate([
    Selector(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Object)
], AuthState, "userPreferences", null);
__decorate([
    Selector(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", String)
], AuthState, "userRole", null);
__decorate([
    Selector(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Boolean)
], AuthState, "isLoggedIn", null);
__decorate([
    Selector(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", String)
], AuthState, "userId", null);
__decorate([
    Selector(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Boolean)
], AuthState, "isTokenExpired", null);
__decorate([
    Selector(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Object)
], AuthState, "loggedInUser", null);
AuthState = AuthState_1 = __decorate([
    State({
        name: 'auth',
        defaults: {},
    })
], AuthState);
export { AuthState };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: AuthState, decorators: [{
            type: Injectable
        }], propDecorators: { setAuthState: [], logout: [], setUserPreferences: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5zdGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL2xpYi9zdG9yZS9hdXRoLnN0YXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQ0wsTUFBTSxFQUNOLGNBQWMsRUFDZCxRQUFRLEVBQ1IsS0FBSyxHQUVOLE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUV6QyxPQUFPLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQU9oRixJQUNhLFNBQVMsaUJBRHRCLE1BQ2EsU0FBUztJQUViLEFBQVAsTUFBTSxDQUFDLGVBQWUsQ0FDcEIsS0FBeUI7UUFFekIsT0FBTyxLQUFLLENBQUMsZUFBZSxDQUFDO0lBQy9CLENBQUM7SUFHTSxBQUFQLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBeUI7UUFDdkMsT0FBTyxLQUFLLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBR00sQUFBUCxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQXlCO1FBQ3pDLE9BQU8sQ0FBQyxXQUFTLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFHTSxBQUFQLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBeUI7UUFDckMsT0FBTyxLQUFLLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBR00sQUFBUCxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQXlCO1FBQzdDLElBQUksS0FBSyxDQUFDLGNBQWMsRUFBRTtZQUN4QixPQUFPLElBQUksSUFBSSxFQUFFLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztTQUNwRTthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUM7U0FDYjtJQUNILENBQUM7SUFHTSxBQUFQLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBeUI7UUFDM0MsT0FBTztZQUNMLGtCQUFrQixFQUFFLEtBQUssQ0FBQyxrQkFBa0IsSUFBSSxFQUFFO1lBQ2xELFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVyxJQUFJLEVBQUU7WUFDcEMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtZQUM5QixRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVEsSUFBSSxFQUFFO1NBQ3ZCLENBQUM7SUFDWixDQUFDO0lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFZO1FBQ3pCLE9BQU8sY0FBYyxDQUFDLENBQUMsV0FBUyxDQUFDLEVBQUUsQ0FBQyxLQUF5QixFQUFFLEVBQUU7WUFDL0QsT0FBTyxLQUFLLENBQUMsUUFBUSxLQUFLLElBQUksQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFHRCxZQUFZLENBQ1YsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFvQyxFQUMxRCxPQUFxQjtRQUVyQixNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsVUFBaUIsQ0FBQztRQUV6QyxVQUFVLENBQUM7WUFDVCxrQkFBa0IsRUFBRSxNQUFNLENBQUMsb0JBQW9CLENBQUM7WUFDaEQsV0FBVyxFQUFFLE1BQU0sQ0FBQyxhQUFhLENBQUM7WUFDbEMsY0FBYyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxRQUFRLEVBQUU7WUFDekMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxRQUFRLEVBQUU7WUFDcEMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUM7WUFDNUIsUUFBUSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUM7U0FDN0IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUdELE1BQU0sQ0FBQyxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQW9DO1FBQy9ELFVBQVUsQ0FBQztZQUNULGtCQUFrQixFQUFFLEVBQUU7WUFDdEIsV0FBVyxFQUFFLEVBQUU7WUFDZixjQUFjLEVBQUUsRUFBRTtZQUNsQixNQUFNLEVBQUUsRUFBRTtZQUNWLFFBQVEsRUFBRSxFQUFFO1lBQ1osUUFBUSxFQUFFLFNBQVM7WUFDbkIsZUFBZSxFQUFFLFNBQVM7U0FDM0IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUdELGtCQUFrQixDQUNoQixFQUFFLFVBQVUsRUFBb0MsRUFDaEQsT0FBMkI7UUFFM0IsVUFBVSxDQUFDO1lBQ1QsZUFBZSxFQUFFLE9BQU8sQ0FBQyxlQUFlO1NBQ3pDLENBQUMsQ0FBQztJQUNMLENBQUM7K0dBdEZVLFNBQVM7bUhBQVQsU0FBUzs7QUFpRHBCO0lBREMsTUFBTSxDQUFDLFlBQVksQ0FBQzs7NkNBR1YsWUFBWTs7NkNBWXRCO0FBR0Q7SUFEQyxNQUFNLENBQUMsTUFBTSxDQUFDOzs7O3VDQVdkO0FBR0Q7SUFEQyxNQUFNLENBQUMsa0JBQWtCLENBQUM7OzZDQUdoQixrQkFBa0I7O21EQUs1QjtBQXBGTTtJQUROLFFBQVEsRUFBRTs7OztzQ0FLVjtBQUdNO0lBRE4sUUFBUSxFQUFFOzs7OytCQUdWO0FBR007SUFETixRQUFRLEVBQUU7Ozs7aUNBR1Y7QUFHTTtJQUROLFFBQVEsRUFBRTs7Ozs2QkFHVjtBQUdNO0lBRE4sUUFBUSxFQUFFOzs7O3FDQU9WO0FBR007SUFETixRQUFRLEVBQUU7Ozs7bUNBUVY7QUF4Q1UsU0FBUztJQUxyQixLQUFLLENBQXFCO1FBQ3pCLElBQUksRUFBRSxNQUFNO1FBQ1osUUFBUSxFQUFFLEVBQUU7S0FDYixDQUFDO0dBRVcsU0FBUyxDQXVGckI7U0F2RlksU0FBUzs0RkFBVCxTQUFTO2tCQURyQixVQUFVOzhCQWtEVCxZQUFZLE1BaUJaLE1BQU0sTUFhTixrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBBY3Rpb24sXG4gIGNyZWF0ZVNlbGVjdG9yLFxuICBTZWxlY3RvcixcbiAgU3RhdGUsXG4gIFN0YXRlQ29udGV4dCxcbn0gZnJvbSAnQG5neHMvc3RvcmUnO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJy4uL2FwaS9tb2RlbC91c2VyJztcbmltcG9ydCB7IEF1dGhTdGF0ZUludGVyZmFjZSB9IGZyb20gJy4vYXV0aC1zdGF0ZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTG9nb3V0LCBTZXRBdXRoU3RhdGUsIFNldFVzZXJQcmVmZXJlbmNlcyB9IGZyb20gJy4vYXV0aC5zdGF0ZS5hY3Rpb25zJztcbmltcG9ydCB7IFVzZXJQcmVmZXJlbmNlcyB9IGZyb20gJy4uL2FwaSc7XG5cbkBTdGF0ZTxBdXRoU3RhdGVJbnRlcmZhY2U+KHtcbiAgbmFtZTogJ2F1dGgnLFxuICBkZWZhdWx0czoge30sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEF1dGhTdGF0ZSB7XG4gIEBTZWxlY3RvcigpXG4gIHN0YXRpYyB1c2VyUHJlZmVyZW5jZXMoXG4gICAgc3RhdGU6IEF1dGhTdGF0ZUludGVyZmFjZVxuICApOiBVc2VyUHJlZmVyZW5jZXMgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBzdGF0ZS51c2VyUHJlZmVyZW5jZXM7XG4gIH1cblxuICBAU2VsZWN0b3IoKVxuICBzdGF0aWMgdXNlclJvbGUoc3RhdGU6IEF1dGhTdGF0ZUludGVyZmFjZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN0YXRlLnVzZXJSb2xlID8/ICcnO1xuICB9XG5cbiAgQFNlbGVjdG9yKClcbiAgc3RhdGljIGlzTG9nZ2VkSW4oc3RhdGU6IEF1dGhTdGF0ZUludGVyZmFjZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhQXV0aFN0YXRlLmlzVG9rZW5FeHBpcmVkKHN0YXRlKTtcbiAgfVxuXG4gIEBTZWxlY3RvcigpXG4gIHN0YXRpYyB1c2VySWQoc3RhdGU6IEF1dGhTdGF0ZUludGVyZmFjZSk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN0YXRlLnVzZXJJZCA/PyAnJztcbiAgfVxuXG4gIEBTZWxlY3RvcigpXG4gIHN0YXRpYyBpc1Rva2VuRXhwaXJlZChzdGF0ZTogQXV0aFN0YXRlSW50ZXJmYWNlKTogYm9vbGVhbiB7XG4gICAgaWYgKHN0YXRlLmV4cGlyYXRpb25EYXRlKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoKSA+PSBuZXcgRGF0ZShOdW1iZXIoc3RhdGUuZXhwaXJhdGlvbkRhdGUpICogMTAwMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIEBTZWxlY3RvcigpXG4gIHN0YXRpYyBsb2dnZWRJblVzZXIoc3RhdGU6IEF1dGhTdGF0ZUludGVyZmFjZSk6IFVzZXIge1xuICAgIHJldHVybiB7XG4gICAgICBkZWZhdWx0QXZhdGFyQ29sb3I6IHN0YXRlLmRlZmF1bHRBdmF0YXJDb2xvciA/PyAnJyxcbiAgICAgIGRpc3BsYXlOYW1lOiBzdGF0ZS5kaXNwbGF5bmFtZSA/PyAnJyxcbiAgICAgIGlkOiBOdW1iZXIoc3RhdGUudXNlcklkKSA/PyAnJyxcbiAgICAgIHVzZXJuYW1lOiBzdGF0ZS51c2VybmFtZSA/PyAnJyxcbiAgICB9IGFzIFVzZXI7XG4gIH1cblxuICBzdGF0aWMgaGFzUm9sZShyb2xlOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gY3JlYXRlU2VsZWN0b3IoW0F1dGhTdGF0ZV0sIChzdGF0ZTogQXV0aFN0YXRlSW50ZXJmYWNlKSA9PiB7XG4gICAgICByZXR1cm4gc3RhdGUudXNlclJvbGUgPT09IHJvbGU7XG4gICAgfSk7XG4gIH1cblxuICBAQWN0aW9uKFNldEF1dGhTdGF0ZSlcbiAgc2V0QXV0aFN0YXRlKFxuICAgIHsgZ2V0U3RhdGUsIHBhdGNoU3RhdGUgfTogU3RhdGVDb250ZXh0PEF1dGhTdGF0ZUludGVyZmFjZT4sXG4gICAgcGF5bG9hZDogU2V0QXV0aFN0YXRlXG4gICkge1xuICAgIGNvbnN0IGNsYWltcyA9IHBheWxvYWQudXNlckNsYWltcyBhcyBhbnk7XG5cbiAgICBwYXRjaFN0YXRlKHtcbiAgICAgIGRlZmF1bHRBdmF0YXJDb2xvcjogY2xhaW1zWydEZWZhdWx0QXZhdGFyQ29sb3InXSxcbiAgICAgIGRpc3BsYXluYW1lOiBjbGFpbXNbJ0Rpc3BsYXluYW1lJ10sXG4gICAgICBleHBpcmF0aW9uRGF0ZTogY2xhaW1zWydleHAnXT8udG9TdHJpbmcoKSxcbiAgICAgIHVzZXJJZDogY2xhaW1zWydVc2VySWQnXT8udG9TdHJpbmcoKSxcbiAgICAgIHVzZXJuYW1lOiBjbGFpbXNbJ1VzZXJuYW1lJ10sXG4gICAgICB1c2VyUm9sZTogY2xhaW1zWydVc2VyUm9sZSddLFxuICAgIH0pO1xuICB9XG5cbiAgQEFjdGlvbihMb2dvdXQpXG4gIGxvZ291dCh7IGdldFN0YXRlLCBwYXRjaFN0YXRlIH06IFN0YXRlQ29udGV4dDxBdXRoU3RhdGVJbnRlcmZhY2U+KSB7XG4gICAgcGF0Y2hTdGF0ZSh7XG4gICAgICBkZWZhdWx0QXZhdGFyQ29sb3I6ICcnLFxuICAgICAgZGlzcGxheW5hbWU6ICcnLFxuICAgICAgZXhwaXJhdGlvbkRhdGU6ICcnLFxuICAgICAgdXNlcklkOiAnJyxcbiAgICAgIHVzZXJuYW1lOiAnJyxcbiAgICAgIHVzZXJSb2xlOiB1bmRlZmluZWQsXG4gICAgICB1c2VyUHJlZmVyZW5jZXM6IHVuZGVmaW5lZCxcbiAgICB9KTtcbiAgfVxuXG4gIEBBY3Rpb24oU2V0VXNlclByZWZlcmVuY2VzKVxuICBzZXRVc2VyUHJlZmVyZW5jZXMoXG4gICAgeyBwYXRjaFN0YXRlIH06IFN0YXRlQ29udGV4dDxBdXRoU3RhdGVJbnRlcmZhY2U+LFxuICAgIHBheWxvYWQ6IFNldFVzZXJQcmVmZXJlbmNlc1xuICApIHtcbiAgICBwYXRjaFN0YXRlKHtcbiAgICAgIHVzZXJQcmVmZXJlbmNlczogcGF5bG9hZC51c2VyUHJlZmVyZW5jZXMsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==