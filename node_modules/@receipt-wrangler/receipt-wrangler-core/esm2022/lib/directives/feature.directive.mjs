import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';
import { Store } from '@ngxs/store';
import { FeatureConfigState } from '../store/feature-config.state';
import * as i0 from "@angular/core";
import * as i1 from "@ngxs/store";
/**
 * Add the template content to the DOM unless the condition is true.
 */
class FeatureDirective {
    constructor(templateRef, viewContainer, store) {
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
        this.store = store;
        this.hasView = false;
    }
    set appFeature(feature) {
        const hasFeature = this.store.selectSnapshot(FeatureConfigState.hasFeature(feature));
        if (hasFeature) {
            this.viewContainer.createEmbeddedView(this.templateRef);
            this.hasView = true;
        }
        else if (!hasFeature) {
            this.viewContainer.clear();
            this.hasView = false;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: FeatureDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: i1.Store }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.11", type: FeatureDirective, selector: "[appFeature]", inputs: { appFeature: "appFeature" }, ngImport: i0 }); }
}
export { FeatureDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: FeatureDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[appFeature]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: i1.Store }]; }, propDecorators: { appFeature: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9saWIvZGlyZWN0aXZlcy9mZWF0dXJlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7O0FBRW5FOztHQUVHO0FBQ0gsTUFDYSxnQkFBZ0I7SUFHM0IsWUFDVSxXQUE2QixFQUM3QixhQUErQixFQUMvQixLQUFZO1FBRlosZ0JBQVcsR0FBWCxXQUFXLENBQWtCO1FBQzdCLGtCQUFhLEdBQWIsYUFBYSxDQUFrQjtRQUMvQixVQUFLLEdBQUwsS0FBSyxDQUFPO1FBTGQsWUFBTyxHQUFHLEtBQUssQ0FBQztJQU1yQixDQUFDO0lBRUosSUFBYSxVQUFVLENBQUMsT0FBZTtRQUNyQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FDMUMsa0JBQWtCLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUN2QyxDQUFDO1FBRUYsSUFBSSxVQUFVLEVBQUU7WUFDZCxJQUFJLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUN4RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztTQUNyQjthQUFNLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUMzQixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztTQUN0QjtJQUNILENBQUM7K0dBckJVLGdCQUFnQjttR0FBaEIsZ0JBQWdCOztTQUFoQixnQkFBZ0I7NEZBQWhCLGdCQUFnQjtrQkFENUIsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUU7cUpBVXhCLFVBQVU7c0JBQXRCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3RvcmUgfSBmcm9tICdAbmd4cy9zdG9yZSc7XG5pbXBvcnQgeyBGZWF0dXJlQ29uZmlnU3RhdGUgfSBmcm9tICcuLi9zdG9yZS9mZWF0dXJlLWNvbmZpZy5zdGF0ZSc7XG5cbi8qKlxuICogQWRkIHRoZSB0ZW1wbGF0ZSBjb250ZW50IHRvIHRoZSBET00gdW5sZXNzIHRoZSBjb25kaXRpb24gaXMgdHJ1ZS5cbiAqL1xuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW2FwcEZlYXR1cmVdJyB9KVxuZXhwb3J0IGNsYXNzIEZlYXR1cmVEaXJlY3RpdmUge1xuICBwcml2YXRlIGhhc1ZpZXcgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+LFxuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZixcbiAgICBwcml2YXRlIHN0b3JlOiBTdG9yZVxuICApIHt9XG5cbiAgQElucHV0KCkgc2V0IGFwcEZlYXR1cmUoZmVhdHVyZTogc3RyaW5nKSB7XG4gICAgY29uc3QgaGFzRmVhdHVyZSA9IHRoaXMuc3RvcmUuc2VsZWN0U25hcHNob3QoXG4gICAgICBGZWF0dXJlQ29uZmlnU3RhdGUuaGFzRmVhdHVyZShmZWF0dXJlKVxuICAgICk7XG5cbiAgICBpZiAoaGFzRmVhdHVyZSkge1xuICAgICAgdGhpcy52aWV3Q29udGFpbmVyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlUmVmKTtcbiAgICAgIHRoaXMuaGFzVmlldyA9IHRydWU7XG4gICAgfSBlbHNlIGlmICghaGFzRmVhdHVyZSkge1xuICAgICAgdGhpcy52aWV3Q29udGFpbmVyLmNsZWFyKCk7XG4gICAgICB0aGlzLmhhc1ZpZXcgPSBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==