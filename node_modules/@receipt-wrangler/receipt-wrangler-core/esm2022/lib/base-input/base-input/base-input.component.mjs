import { Component, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
import { map, startWith } from 'rxjs';
import * as i0 from "@angular/core";
class BaseInputComponent {
    constructor() {
        this.inputFormControl = new FormControl();
        this.label = '';
        this.readonly = false;
        this.errorMessages = {};
    }
    ngOnInit() {
        this.errorMessages = {
            required: `${this.label} is required.`,
            email: `${this.label} must be a valid email address.`,
            duplicate: `${this.label} must be unique.`,
            min: `Value must be larger than 0`,
        };
        this.formControlErrors = this.inputFormControl.statusChanges.pipe(startWith(this.inputFormControl.status), map(() => {
            const errors = this.inputFormControl.errors;
            if (errors) {
                const keys = Object.keys(this.inputFormControl.errors);
                return keys.map((k) => {
                    const value = errors[k];
                    let message = '';
                    if (typeof value === 'string') {
                        message = value;
                    }
                    else if (this.errorMessages[k]) {
                        message = this.errorMessages[k];
                    }
                    return {
                        error: k,
                        message: message,
                    };
                });
            }
            else {
                return [];
            }
        }));
        if (this.additionalErrorMessages) {
            this.errorMessages = {
                ...this.errorMessages,
                ...this.additionalErrorMessages,
            };
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: BaseInputComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.11", type: BaseInputComponent, selector: "app-base-input", inputs: { inputFormControl: "inputFormControl", label: "label", additionalErrorMessages: "additionalErrorMessages", readonly: "readonly", placeholder: "placeholder" }, ngImport: i0, template: "<p>base-input works!</p>\n", styles: [""] }); }
}
export { BaseInputComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.11", ngImport: i0, type: BaseInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-base-input', template: "<p>base-input works!</p>\n" }]
        }], propDecorators: { inputFormControl: [{
                type: Input
            }], label: [{
                type: Input
            }], additionalErrorMessages: [{
                type: Input
            }], readonly: [{
                type: Input
            }], placeholder: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9saWIvYmFzZS1pbnB1dC9iYXNlLWlucHV0L2Jhc2UtaW5wdXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2Jhc2UtaW5wdXQvYmFzZS1pbnB1dC9iYXNlLWlucHV0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsR0FBRyxFQUFjLFNBQVMsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7QUFJbEQsTUFLYSxrQkFBa0I7SUFML0I7UUFNa0IscUJBQWdCLEdBQWdCLElBQUksV0FBVyxFQUFFLENBQUM7UUFFbEQsVUFBSyxHQUFXLEVBQUUsQ0FBQztRQUluQixhQUFRLEdBQVksS0FBSyxDQUFDO1FBTW5DLGtCQUFhLEdBQThCLEVBQUUsQ0FBQztLQTRDdEQ7SUExQ1EsUUFBUTtRQUNiLElBQUksQ0FBQyxhQUFhLEdBQUc7WUFDbkIsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssZUFBZTtZQUN0QyxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxpQ0FBaUM7WUFDckQsU0FBUyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssa0JBQWtCO1lBQzFDLEdBQUcsRUFBRSw2QkFBNkI7U0FDbkMsQ0FBQztRQUVGLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxDQUFDLElBQUksQ0FDL0QsU0FBUyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsRUFDdkMsR0FBRyxDQUFDLEdBQUcsRUFBRTtZQUNQLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUM7WUFDNUMsSUFBSSxNQUFNLEVBQUU7Z0JBQ1YsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBYSxDQUFDLENBQUM7Z0JBQzlELE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQVMsRUFBRSxFQUFFO29CQUM1QixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3hCLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztvQkFFakIsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7d0JBQzdCLE9BQU8sR0FBRyxLQUFLLENBQUM7cUJBQ2pCO3lCQUFNLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsRUFBRTt3QkFDaEMsT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7cUJBQ2pDO29CQUVELE9BQU87d0JBQ0wsS0FBSyxFQUFFLENBQVc7d0JBQ2xCLE9BQU8sRUFBRSxPQUFPO3FCQUNqQixDQUFDO2dCQUNKLENBQUMsQ0FBQyxDQUFDO2FBQ0o7aUJBQU07Z0JBQ0wsT0FBTyxFQUFFLENBQUM7YUFDWDtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7UUFFRixJQUFJLElBQUksQ0FBQyx1QkFBdUIsRUFBRTtZQUNoQyxJQUFJLENBQUMsYUFBYSxHQUFHO2dCQUNuQixHQUFHLElBQUksQ0FBQyxhQUFhO2dCQUNyQixHQUFHLElBQUksQ0FBQyx1QkFBdUI7YUFDaEMsQ0FBQztTQUNIO0lBQ0gsQ0FBQzsrR0F4RFUsa0JBQWtCO21HQUFsQixrQkFBa0IsOE5DWC9CLDRCQUNBOztTRFVhLGtCQUFrQjs0RkFBbEIsa0JBQWtCO2tCQUw5QixTQUFTOytCQUNFLGdCQUFnQjs4QkFLVixnQkFBZ0I7c0JBQS9CLEtBQUs7Z0JBRVUsS0FBSztzQkFBcEIsS0FBSztnQkFFVSx1QkFBdUI7c0JBQXRDLEtBQUs7Z0JBRVUsUUFBUTtzQkFBdkIsS0FBSztnQkFFVSxXQUFXO3NCQUExQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IG1hcCwgT2JzZXJ2YWJsZSwgc3RhcnRXaXRoIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBJbnB1dEVycm9yTWVzc2FnZSB9IGZyb20gJy4vaW5wdXQtZXJyb3ItbWVzc2FnZSc7XG5pbXBvcnQgeyBCYXNlSW5wdXRJbnRlcmZhY2UgfSBmcm9tICcuLi9iYXNlLWlucHV0LmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1iYXNlLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Jhc2UtaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9iYXNlLWlucHV0LmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIEJhc2VJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQmFzZUlucHV0SW50ZXJmYWNlIHtcbiAgQElucHV0KCkgcHVibGljIGlucHV0Rm9ybUNvbnRyb2w6IEZvcm1Db250cm9sID0gbmV3IEZvcm1Db250cm9sKCk7XG5cbiAgQElucHV0KCkgcHVibGljIGxhYmVsOiBzdHJpbmcgPSAnJztcblxuICBASW5wdXQoKSBwdWJsaWMgYWRkaXRpb25hbEVycm9yTWVzc2FnZXM/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xuXG4gIEBJbnB1dCgpIHB1YmxpYyByZWFkb25seTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIHB1YmxpYyBwbGFjZWhvbGRlcj86IHN0cmluZztcblxuICBwdWJsaWMgZm9ybUNvbnRyb2xFcnJvcnMhOiBPYnNlcnZhYmxlPElucHV0RXJyb3JNZXNzYWdlW10+O1xuXG4gIHB1YmxpYyBlcnJvck1lc3NhZ2VzOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9ID0ge307XG5cbiAgcHVibGljIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuZXJyb3JNZXNzYWdlcyA9IHtcbiAgICAgIHJlcXVpcmVkOiBgJHt0aGlzLmxhYmVsfSBpcyByZXF1aXJlZC5gLFxuICAgICAgZW1haWw6IGAke3RoaXMubGFiZWx9IG11c3QgYmUgYSB2YWxpZCBlbWFpbCBhZGRyZXNzLmAsXG4gICAgICBkdXBsaWNhdGU6IGAke3RoaXMubGFiZWx9IG11c3QgYmUgdW5pcXVlLmAsXG4gICAgICBtaW46IGBWYWx1ZSBtdXN0IGJlIGxhcmdlciB0aGFuIDBgLFxuICAgIH07XG5cbiAgICB0aGlzLmZvcm1Db250cm9sRXJyb3JzID0gdGhpcy5pbnB1dEZvcm1Db250cm9sLnN0YXR1c0NoYW5nZXMucGlwZShcbiAgICAgIHN0YXJ0V2l0aCh0aGlzLmlucHV0Rm9ybUNvbnRyb2wuc3RhdHVzKSxcbiAgICAgIG1hcCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGVycm9ycyA9IHRoaXMuaW5wdXRGb3JtQ29udHJvbC5lcnJvcnM7XG4gICAgICAgIGlmIChlcnJvcnMpIHtcbiAgICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5pbnB1dEZvcm1Db250cm9sLmVycm9ycyBhcyBhbnkpO1xuICAgICAgICAgIHJldHVybiBrZXlzLm1hcCgoazogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGVycm9yc1trXTtcbiAgICAgICAgICAgIGxldCBtZXNzYWdlID0gJyc7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIG1lc3NhZ2UgPSB2YWx1ZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5lcnJvck1lc3NhZ2VzW2tdKSB7XG4gICAgICAgICAgICAgIG1lc3NhZ2UgPSB0aGlzLmVycm9yTWVzc2FnZXNba107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIGVycm9yOiBrIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG5cbiAgICBpZiAodGhpcy5hZGRpdGlvbmFsRXJyb3JNZXNzYWdlcykge1xuICAgICAgdGhpcy5lcnJvck1lc3NhZ2VzID0ge1xuICAgICAgICAuLi50aGlzLmVycm9yTWVzc2FnZXMsXG4gICAgICAgIC4uLnRoaXMuYWRkaXRpb25hbEVycm9yTWVzc2FnZXMsXG4gICAgICB9O1xuICAgIH1cbiAgfVxufVxuIiwiPHA+YmFzZS1pbnB1dCB3b3JrcyE8L3A+XG4iXX0=