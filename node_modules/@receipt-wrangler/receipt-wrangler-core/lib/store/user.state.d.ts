import { StateContext } from '@ngxs/store';
import { User } from '../api/model/user';
import { AddUser, RemoveUser, SetUsers, UpdateUser } from './user.state.actions';
import * as i0 from "@angular/core";
export interface UserStateInterface {
    users: User[];
}
export declare class UserState {
    static users(state: UserStateInterface): User[];
    static getUserById(userId: string): (state: UserStateInterface) => User | undefined;
    static findUserById(userId: string): (state: UserStateInterface) => User | undefined;
    static findUserIndexById(userId: string, users: User[]): number;
    setUsers({ getState, patchState }: StateContext<UserStateInterface>, payload: SetUsers): void;
    updateUser({ getState, patchState }: StateContext<UserStateInterface>, payload: UpdateUser): void;
    addUser({ getState, patchState }: StateContext<UserStateInterface>, payload: AddUser): void;
    removeUser({ getState, patchState }: StateContext<UserStateInterface>, payload: RemoveUser): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserState, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<UserState>;
}
