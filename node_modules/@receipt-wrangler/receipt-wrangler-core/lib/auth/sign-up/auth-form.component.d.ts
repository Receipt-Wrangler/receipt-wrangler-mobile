import { EventEmitter, OnInit, TemplateRef } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { Store } from '@ngxs/store';
import { BehaviorSubject } from 'rxjs';
import { UserValidators } from '../../validators/user-validators';
import { AuthFormUtil } from './auth-form.util';
import * as i0 from "@angular/core";
export declare class AuthForm implements OnInit {
    protected authFormUtil: AuthFormUtil;
    protected formBuilder: FormBuilder;
    protected route: ActivatedRoute;
    protected router: Router;
    protected store: Store;
    protected userValidators: UserValidators;
    additionalFieldsTemplate?: TemplateRef<any>;
    emitSubmit: boolean;
    submitted: EventEmitter<void>;
    form: FormGroup;
    isSignUp: BehaviorSubject<boolean>;
    headerText: string;
    primaryButtonText: string;
    secondaryButtonText: string;
    secondaryButtonRouterLink: string[];
    constructor(authFormUtil: AuthFormUtil, formBuilder: FormBuilder, route: ActivatedRoute, router: Router, store: Store, userValidators: UserValidators);
    ngOnInit(): void;
    private listenForRouteChanges;
    private listenForIsSignUpChanges;
    private initForm;
    submit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AuthForm, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AuthForm, "app-auth-form", never, { "additionalFieldsTemplate": { "alias": "additionalFieldsTemplate"; "required": false; }; "emitSubmit": { "alias": "emitSubmit"; "required": false; }; }, { "submitted": "submitted"; }, never, never, false, never>;
}
