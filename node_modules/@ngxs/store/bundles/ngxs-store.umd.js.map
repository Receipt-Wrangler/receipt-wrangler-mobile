{"version":3,"file":"ngxs-store.umd.js","sources":["../../../node_modules/tslib/tslib.es6.mjs","../../../packages/store/src/utils/utils.ts","../../../packages/store/src/configs/messages.config.ts","../../../packages/store/src/execution/dispatch-outside-zone-ngxs-execution-strategy.ts","../../../packages/store/src/symbols.ts","../../../packages/store/src/execution/noop-ngxs-execution-strategy.ts","../../../packages/store/src/execution/symbols.ts","../../../packages/store/src/internal/internals.ts","../../../packages/store/src/operators/of-action.ts","../../../packages/store/src/utils/store-validators.ts","../../../packages/store/src/ivy/ivy-enabled-in-dev-mode.ts","../../../packages/store/src/actions/actions.ts","../../../packages/store/src/dev-features/symbols.ts","../../../packages/store/src/dev-features/ngxs-unhandled-actions-logger.ts","../../../packages/store/src/operators/leave-ngxs.ts","../../../packages/store/src/internal/custom-rxjs-subjects.ts","../../../packages/store/src/execution/internal-ngxs-execution-strategy.ts","../../../packages/store/src/actions-stream.ts","../../../packages/store/src/utils/compose.ts","../../../packages/store/src/internal/error-handler.ts","../../../packages/store/src/plugin-manager.ts","../../../packages/store/src/internal/state-stream.ts","../../../packages/store/src/internal/dispatcher.ts","../../../packages/store/src/internal/state-operators.ts","../../../packages/store/src/utils/freeze.ts","../../../packages/store/src/internal/state-operations.ts","../../../packages/store/src/internal/state-context-factory.ts","../../../packages/store/src/internal/state-factory.ts","../../../packages/store/src/selectors/selector-utils.ts","../../../packages/store/src/store.ts","../../../packages/store/src/decorators/select/select-factory.ts","../../../packages/store/src/internal/lifecycle-state-manager.ts","../../../packages/store/src/modules/ngxs-root.module.ts","../../../packages/store/src/modules/ngxs-feature.module.ts","../../../packages/store/src/module.ts","../../../packages/store/src/decorators/action.ts","../../../packages/store/src/decorators/state.ts","../../../packages/store/src/decorators/select/symbols.ts","../../../packages/store/src/decorators/select/select.ts","../../../packages/store/src/selectors/selector-metadata.ts","../../../packages/store/src/decorators/selector-options.ts","../../../packages/store/src/public_to_deprecate.ts","../../../packages/store/src/selectors/create-selector.ts","../../../packages/store/src/decorators/selector/selector.ts","../../../packages/store/src/state-token/state-token.ts","../../../packages/store/src/dev-features/ngxs-development.module.ts","../../../packages/store/src/selectors/selector-checks.util.ts","../../../packages/store/src/selectors/create-model-selector.ts","../../../packages/store/src/selectors/create-pick-selector.ts","../../../packages/store/src/selectors/create-property-selectors.ts","../../../packages/store/index.ts","../../../packages/store/ngxs-store.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * Returns the type from an action instance/class.\n * @ignore\n */\nexport function getActionTypeFromInstance(action: any): string | undefined {\n  if (action.constructor && action.constructor.type) {\n    return action.constructor.type;\n  } else {\n    return action.type;\n  }\n}\n\n/**\n * Matches a action\n * @ignore\n */\nexport function actionMatcher(action1: any) {\n  const type1 = getActionTypeFromInstance(action1);\n\n  return function(action2: any) {\n    return type1 === getActionTypeFromInstance(action2);\n  };\n}\n\n/**\n * Set a deeply nested value. Example:\n *\n *   setValue({ foo: { bar: { eat: false } } },\n *      'foo.bar.eat', true) //=> { foo: { bar: { eat: true } } }\n *\n * While it traverses it also creates new objects from top down.\n *\n * @ignore\n */\nexport const setValue = (obj: any, prop: string, val: any) => {\n  obj = { ...obj };\n\n  const split = prop.split('.');\n  const lastIndex = split.length - 1;\n\n  split.reduce((acc, part, index) => {\n    if (index === lastIndex) {\n      acc[part] = val;\n    } else {\n      acc[part] = Array.isArray(acc[part]) ? acc[part].slice() : { ...acc[part] };\n    }\n\n    return acc && acc[part];\n  }, obj);\n\n  return obj;\n};\n\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n * @ignore\n */\nexport const getValue = (obj: any, prop: string): any =>\n  prop.split('.').reduce((acc: any, part: string) => acc && acc[part], obj);\n\n/**\n * Simple object check.\n *\n *    isObject({a:1}) //=> true\n *    isObject(1) //=> false\n *\n * @ignore\n */\nexport const isObject = (item: any) => {\n  return item && typeof item === 'object' && !Array.isArray(item);\n};\n\n/**\n * Deep merge two objects.\n *\n *    mergeDeep({a:1, b:{x: 1, y:2}}, {b:{x: 3}, c:4}) //=> {a:1, b:{x:3, y:2}, c:4}\n *\n * @param base base object onto which `sources` will be applied\n */\nexport const mergeDeep = (base: any, ...sources: any[]): any => {\n  if (!sources.length) return base;\n  const source = sources.shift();\n\n  if (isObject(base) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!base[key]) Object.assign(base, { [key]: {} });\n        mergeDeep(base[key], source[key]);\n      } else {\n        Object.assign(base, { [key]: source[key] });\n      }\n    }\n  }\n\n  return mergeDeep(base, ...sources);\n};\n","export function throwStateNameError(name: string): never {\n  throw new Error(\n    `${name} is not a valid state name. It needs to be a valid object property name.`\n  );\n}\n\nexport function throwStateNamePropertyError(): never {\n  throw new Error(`States must register a 'name' property.`);\n}\n\nexport function throwStateUniqueError(\n  current: string,\n  newName: string,\n  oldName: string\n): never {\n  throw new Error(`State name '${current}' from ${newName} already exists in ${oldName}.`);\n}\n\nexport function throwStateDecoratorError(name: string): never {\n  throw new Error(`States must be decorated with @State() decorator, but \"${name}\" isn't.`);\n}\n\nexport function throwActionDecoratorError(): never {\n  throw new Error('@Action() decorator cannot be used with static methods.');\n}\n\nexport function throwSelectorDecoratorError(): never {\n  throw new Error('Selectors only work on methods.');\n}\n\nexport function getZoneWarningMessage(): string {\n  return (\n    'Your application was bootstrapped with nooped zone and your execution strategy requires an actual NgZone!\\n' +\n    'Please set the value of the executionStrategy property to NoopNgxsExecutionStrategy.\\n' +\n    'NgxsModule.forRoot(states, { executionStrategy: NoopNgxsExecutionStrategy })'\n  );\n}\n\nexport function getUndecoratedStateInIvyWarningMessage(name: string): string {\n  return `'${name}' class should be decorated with @Injectable() right after the @State() decorator`;\n}\n\nexport function throwSelectFactoryNotConnectedError(): never {\n  throw new Error('You have forgotten to import the NGXS module!');\n}\n\nexport function throwPatchingArrayError(): never {\n  throw new Error('Patching arrays is not supported.');\n}\n\nexport function throwPatchingPrimitiveError(): never {\n  throw new Error('Patching primitives is not supported.');\n}\n","import { Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { NgxsExecutionStrategy } from './symbols';\nimport { getZoneWarningMessage } from '../configs/messages.config';\n\n@Injectable({ providedIn: 'root' })\nexport class DispatchOutsideZoneNgxsExecutionStrategy implements NgxsExecutionStrategy {\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private _platformId: string) {\n    // Caretaker note: we have still left the `typeof` condition in order to avoid\n    // creating a breaking change for projects that still use the View Engine.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      verifyZoneIsNotNooped(_ngZone);\n    }\n  }\n\n  enter<T>(func: () => T): T {\n    if (isPlatformServer(this._platformId)) {\n      return this.runInsideAngular(func);\n    }\n    return this.runOutsideAngular(func);\n  }\n\n  leave<T>(func: () => T): T {\n    return this.runInsideAngular(func);\n  }\n\n  private runInsideAngular<T>(func: () => T): T {\n    if (NgZone.isInAngularZone()) {\n      return func();\n    }\n    return this._ngZone.run(func);\n  }\n\n  private runOutsideAngular<T>(func: () => T): T {\n    if (NgZone.isInAngularZone()) {\n      return this._ngZone.runOutsideAngular(func);\n    }\n    return func();\n  }\n}\n\n// Caretaker note: this should exist as a separate function and not a class method,\n// since class methods are not tree-shakable.\nfunction verifyZoneIsNotNooped(ngZone: NgZone): void {\n  // `NoopNgZone` is not exposed publicly as it doesn't expect\n  // to be used outside of the core Angular code, thus we just have\n  // to check if the zone doesn't extend or instanceof `NgZone`.\n  if (ngZone instanceof NgZone) {\n    return;\n  }\n\n  console.warn(getZoneWarningMessage());\n}\n","import { Injectable, InjectionToken, Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { PlainObject, StateClass } from '@ngxs/store/internals';\nimport { StateOperator } from '@ngxs/store/operators';\n\nimport { mergeDeep } from './utils/utils';\nimport { DispatchOutsideZoneNgxsExecutionStrategy } from './execution/dispatch-outside-zone-ngxs-execution-strategy';\nimport { NgxsExecutionStrategy } from './execution/symbols';\nimport { SharedSelectorOptions } from './internal/internals';\nimport { StateToken } from './state-token/state-token';\n\nexport const ROOT_OPTIONS = new InjectionToken<NgxsModuleOptions>('ROOT_OPTIONS');\nexport const ROOT_STATE_TOKEN = new InjectionToken<any>('ROOT_STATE_TOKEN');\nexport const FEATURE_STATE_TOKEN = new InjectionToken<any>('FEATURE_STATE_TOKEN');\nexport const NGXS_PLUGINS = new InjectionToken('NGXS_PLUGINS');\n\nexport const META_KEY = 'NGXS_META';\nexport const META_OPTIONS_KEY = 'NGXS_OPTIONS_META';\nexport const SELECTOR_META_KEY = 'NGXS_SELECTOR_META';\n\nexport type NgxsLifeCycle = Partial<NgxsOnChanges> &\n  Partial<NgxsOnInit> &\n  Partial<NgxsAfterBootstrap>;\n\nexport type NgxsPluginFn = (state: any, mutation: any, next: NgxsNextPluginFn) => any;\n\n/**\n * The NGXS config settings.\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: (options: NgxsModuleOptions) => mergeDeep(new NgxsConfig(), options),\n  deps: [ROOT_OPTIONS]\n})\nexport class NgxsConfig {\n  /**\n   * Run in development mode. This will add additional debugging features:\n   * - Object.freeze on the state and actions to guarantee immutability\n   * (default: false)\n   *\n   * Note: this property will be accounted only in development mode when using the Ivy compiler.\n   * It makes sense to use it only during development to ensure there're no state mutations.\n   * When building for production, the Object.freeze will be tree-shaken away.\n   */\n  developmentMode: boolean;\n  compatibility: {\n    /**\n     * Support a strict Content Security Policy.\n     * This will circumvent some optimisations that violate a strict CSP through the use of `new Function(...)`.\n     * (default: false)\n     */\n    strictContentSecurityPolicy: boolean;\n  };\n  /**\n   * Determines the execution context to perform async operations inside. An implementation can be\n   * provided to override the default behaviour where the async operations are run\n   * outside Angular's zone but all observable behaviours of NGXS are run back inside Angular's zone.\n   * These observable behaviours are from:\n   *   `@Select(...)`, `store.select(...)`, `actions.subscribe(...)` or `store.dispatch(...).subscribe(...)`\n   * Every `zone.run` causes Angular to run change detection on the whole tree (`app.tick()`) so of your\n   * application doesn't rely on zone.js running change detection then you can switch to the\n   * `NoopNgxsExecutionStrategy` that doesn't interact with zones.\n   * (default: null)\n   */\n  executionStrategy: Type<NgxsExecutionStrategy>;\n  /**\n   * Defining the default state before module initialization\n   * This is convenient if we need to create a define our own set of states.\n   * @deprecated will be removed after v4\n   * (default: {})\n   */\n  defaultsState: PlainObject = {};\n  /**\n   * Defining shared selector options\n   */\n  selectorOptions: SharedSelectorOptions = {\n    injectContainerState: true, // TODO: default is true in v3, will change in v4\n    suppressErrors: true // TODO: default is true in v3, will change in v4\n  };\n\n  constructor() {\n    this.compatibility = {\n      strictContentSecurityPolicy: false\n    };\n    this.executionStrategy = DispatchOutsideZoneNgxsExecutionStrategy;\n  }\n}\n\nexport { StateOperator };\n\n/**\n * State context provided to the actions in the state.\n */\nexport interface StateContext<T> {\n  /**\n   * Get the current state.\n   */\n  getState(): T;\n\n  /**\n   * Reset the state to a new value.\n   */\n  setState(val: T | StateOperator<T>): T;\n\n  /**\n   * Patch the existing state with the provided value.\n   */\n  patchState(val: Partial<T>): T;\n\n  /**\n   * Dispatch a new action and return the dispatched observable.\n   */\n  dispatch(actions: any | any[]): Observable<void>;\n}\n\nexport type NgxsNextPluginFn = (state: any, mutation: any) => any;\n\n/**\n * Plugin interface\n */\nexport interface NgxsPlugin {\n  /**\n   * Handle the state/action before its submitted to the state handlers.\n   */\n  handle(state: any, action: any, next: NgxsNextPluginFn): any;\n}\n\n/**\n * Options that can be provided to the store.\n */\nexport interface StoreOptions<T> {\n  /**\n   * Name of the state. Required.\n   */\n  name: string | StateToken<T>;\n\n  /**\n   * Default values for the state. If not provided, uses empty object.\n   */\n  defaults?: T;\n\n  /**\n   * Sub states for the given state.\n   */\n  children?: StateClass[];\n}\n\n/**\n * Represents a basic change from a previous to a new value for a single state instance.\n * Passed as a value in a NgxsSimpleChanges object to the ngxsOnChanges hook.\n */\nexport class NgxsSimpleChange<T = any> {\n  constructor(\n    public readonly previousValue: T,\n    public readonly currentValue: T,\n    public readonly firstChange: boolean\n  ) {}\n}\n\n/**\n * On init interface\n */\nexport interface NgxsOnInit {\n  ngxsOnInit(ctx: StateContext<any>): void;\n}\n\n/**\n * On change interface\n */\nexport interface NgxsOnChanges {\n  ngxsOnChanges(change: NgxsSimpleChange): void;\n}\n\n/**\n * After bootstrap interface\n */\nexport interface NgxsAfterBootstrap {\n  ngxsAfterBootstrap(ctx: StateContext<any>): void;\n}\n\nexport type NgxsModuleOptions = Partial<NgxsConfig>;\n\n/** @internal */\ndeclare global {\n  const ngDevMode: boolean;\n}\n","import { Injectable } from '@angular/core';\n\nimport { NgxsExecutionStrategy } from './symbols';\n\n@Injectable({ providedIn: 'root' })\nexport class NoopNgxsExecutionStrategy implements NgxsExecutionStrategy {\n  enter<T>(func: () => T): T {\n    return func();\n  }\n\n  leave<T>(func: () => T): T {\n    return func();\n  }\n}\n","import { InjectionToken, inject, INJECTOR, Type, ɵglobal } from '@angular/core';\n\nimport { NoopNgxsExecutionStrategy } from './noop-ngxs-execution-strategy';\nimport { DispatchOutsideZoneNgxsExecutionStrategy } from './dispatch-outside-zone-ngxs-execution-strategy';\n\n/**\n * The strategy that might be provided by users through `options.executionStrategy`.\n */\nexport const USER_PROVIDED_NGXS_EXECUTION_STRATEGY = new InjectionToken<\n  Type<NgxsExecutionStrategy> | undefined\n>('USER_PROVIDED_NGXS_EXECUTION_STRATEGY');\n\n/*\n * Internal execution strategy injection token\n */\nexport const NGXS_EXECUTION_STRATEGY = new InjectionToken<NgxsExecutionStrategy>(\n  'NGXS_EXECUTION_STRATEGY',\n  {\n    providedIn: 'root',\n    factory: () => {\n      const injector = inject(INJECTOR);\n      const executionStrategy = injector.get(USER_PROVIDED_NGXS_EXECUTION_STRATEGY);\n      return executionStrategy\n        ? injector.get(executionStrategy)\n        : injector.get(\n            typeof ɵglobal.Zone !== 'undefined'\n              ? DispatchOutsideZoneNgxsExecutionStrategy\n              : NoopNgxsExecutionStrategy\n          );\n    }\n  }\n);\n\n/*\n * Execution strategy interface\n */\nexport interface NgxsExecutionStrategy {\n  enter<T>(func: () => T): T;\n  leave<T>(func: () => T): T;\n}\n","import { PlainObjectOf, StateClass } from '@ngxs/store/internals';\nimport { Observable } from 'rxjs';\n\nimport {\n  META_KEY,\n  META_OPTIONS_KEY,\n  NgxsConfig,\n  SELECTOR_META_KEY,\n  StoreOptions\n} from '../symbols';\nimport { ActionHandlerMetaData } from '../actions/symbols';\n\n// inspired from https://stackoverflow.com/a/43674389\nexport interface StateClassInternal<T = any, U = any> extends StateClass<T> {\n  [META_KEY]?: MetaDataModel;\n  [META_OPTIONS_KEY]?: StoreOptions<U>;\n}\n\nexport type StateKeyGraph = PlainObjectOf<string[]>;\nexport type StatesByName = PlainObjectOf<StateClassInternal>;\n\nexport interface StateOperations<T> {\n  getState(): T;\n\n  setState(val: T): T;\n\n  dispatch(actionOrActions: any | any[]): Observable<void>;\n}\n\nexport interface MetaDataModel {\n  name: string | null;\n  actions: PlainObjectOf<ActionHandlerMetaData[]>;\n  defaults: any;\n  path: string | null;\n  makeRootSelector: SelectorFactory | null;\n  children?: StateClassInternal[];\n}\n\nexport interface RuntimeSelectorContext {\n  getStateGetter(key: any): (state: any) => any;\n  getSelectorOptions(localOptions?: SharedSelectorOptions): SharedSelectorOptions;\n}\n\nexport type SelectFromRootState = (rootState: any) => any;\nexport type SelectorFactory = (runtimeContext: RuntimeSelectorContext) => SelectFromRootState;\n\nexport interface SharedSelectorOptions {\n  injectContainerState?: boolean;\n  suppressErrors?: boolean;\n}\n\nexport interface SelectorMetaDataModel {\n  makeRootSelector: SelectorFactory | null;\n  originalFn: Function | null;\n  containerClass: any;\n  selectorName: string | null;\n  getSelectorOptions: () => SharedSelectorOptions;\n}\n\nexport interface MappedStore {\n  name: string;\n  isInitialised: boolean;\n  actions: PlainObjectOf<ActionHandlerMetaData[]>;\n  defaults: any;\n  instance: any;\n  path: string;\n}\n\nexport interface StatesAndDefaults {\n  defaults: any;\n  states: MappedStore[];\n}\n\n/**\n * Ensures metadata is attached to the class and returns it.\n *\n * @ignore\n */\nexport function ensureStoreMetadata(target: StateClassInternal): MetaDataModel {\n  if (!target.hasOwnProperty(META_KEY)) {\n    const defaultMetadata: MetaDataModel = {\n      name: null,\n      actions: {},\n      defaults: {},\n      path: null,\n      makeRootSelector(context: RuntimeSelectorContext) {\n        return context.getStateGetter(defaultMetadata.name);\n      },\n      children: []\n    };\n\n    Object.defineProperty(target, META_KEY, { value: defaultMetadata });\n  }\n  return getStoreMetadata(target);\n}\n\n/**\n * Get the metadata attached to the state class if it exists.\n *\n * @ignore\n */\nexport function getStoreMetadata(target: StateClassInternal): MetaDataModel {\n  return target[META_KEY]!;\n}\n\n/**\n * Ensures metadata is attached to the selector and returns it.\n *\n * @ignore\n */\nexport function ensureSelectorMetadata(target: Function): SelectorMetaDataModel {\n  if (!target.hasOwnProperty(SELECTOR_META_KEY)) {\n    const defaultMetadata: SelectorMetaDataModel = {\n      makeRootSelector: null,\n      originalFn: null,\n      containerClass: null,\n      selectorName: null,\n      getSelectorOptions: () => ({})\n    };\n\n    Object.defineProperty(target, SELECTOR_META_KEY, { value: defaultMetadata });\n  }\n\n  return getSelectorMetadata(target);\n}\n\n/**\n * Get the metadata attached to the selector if it exists.\n *\n * @ignore\n */\nexport function getSelectorMetadata(target: any): SelectorMetaDataModel {\n  return target[SELECTOR_META_KEY];\n}\n\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n * Note: This is not as fast as the `fastPropGetter` but is strict Content Security Policy compliant.\n * See perf hit: https://jsperf.com/fast-value-getter-given-path/1\n *\n * @ignore\n */\nfunction compliantPropGetter(paths: string[]): (x: any) => any {\n  const copyOfPaths = paths.slice();\n  return obj => copyOfPaths.reduce((acc: any, part: string) => acc && acc[part], obj);\n}\n\n/**\n * The generated function is faster than:\n * - pluck (Observable operator)\n * - memoize\n *\n * @ignore\n */\nfunction fastPropGetter(paths: string[]): (x: any) => any {\n  const segments = paths;\n  let seg = 'store.' + segments[0];\n  let i = 0;\n  const l = segments.length;\n\n  let expr = seg;\n  while (++i < l) {\n    expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\n  }\n\n  const fn = new Function('store', 'return ' + expr + ';');\n\n  return <(x: any) => any>fn;\n}\n\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n * @ignore\n */\nexport function propGetter(paths: string[], config: NgxsConfig) {\n  if (config && config.compatibility && config.compatibility.strictContentSecurityPolicy) {\n    return compliantPropGetter(paths);\n  } else {\n    return fastPropGetter(paths);\n  }\n}\n\n/**\n * Given an array of states, it will return a object graph. Example:\n *    const states = [\n *      Cart,\n *      CartSaved,\n *      CartSavedItems\n *    ]\n *\n * would return:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * @ignore\n */\nexport function buildGraph(stateClasses: StateClassInternal[]): StateKeyGraph {\n  const findName = (stateClass: StateClassInternal) => {\n    const meta = stateClasses.find(g => g === stateClass);\n\n    // Caretaker note: we have still left the `typeof` condition in order to avoid\n    // creating a breaking change for projects that still use the View Engine.\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !meta) {\n      throw new Error(\n        `Child state not found: ${stateClass}. \\r\\nYou may have forgotten to add states to module`\n      );\n    }\n\n    return meta![META_KEY]!.name!;\n  };\n\n  return stateClasses.reduce<StateKeyGraph>(\n    (result: StateKeyGraph, stateClass: StateClassInternal) => {\n      const { name, children } = stateClass[META_KEY]!;\n      result[name!] = (children || []).map(findName);\n      return result;\n    },\n    {}\n  );\n}\n\n/**\n * Given a states array, returns object graph\n * returning the name and state metadata. Example:\n *\n *  const graph = {\n *    cart: { metadata }\n *  };\n *\n * @ignore\n */\nexport function nameToState(states: StateClassInternal[]): PlainObjectOf<StateClassInternal> {\n  return states.reduce<PlainObjectOf<StateClassInternal>>(\n    (result: PlainObjectOf<StateClassInternal>, stateClass: StateClassInternal) => {\n      const meta = stateClass[META_KEY]!;\n      result[meta.name!] = stateClass;\n      return result;\n    },\n    {}\n  );\n}\n\n/**\n * Given a object relationship graph will return the full path\n * for the child items. Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const r = {\n *    cart: 'cart',\n *    saved: 'cart.saved',\n *    items: 'cart.saved.items'\n *  };\n *\n * @ignore\n */\nexport function findFullParentPath(\n  obj: StateKeyGraph,\n  newObj: PlainObjectOf<string> = {}\n): PlainObjectOf<string> {\n  const visit = (child: StateKeyGraph, keyToFind: string): string | null => {\n    for (const key in child) {\n      if (child.hasOwnProperty(key) && child[key].indexOf(keyToFind) >= 0) {\n        const parent = visit(child, key);\n        return parent !== null ? `${parent}.${key}` : key;\n      }\n    }\n    return null;\n  };\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const parent = visit(obj, key);\n      newObj[key] = parent ? `${parent}.${key}` : key;\n    }\n  }\n\n  return newObj;\n}\n\n/**\n * Given a object graph, it will return the items topologically sorted Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const results = [\n *    'items',\n *    'saved',\n *    'cart'\n *  ];\n *\n * @ignore\n */\nexport function topologicalSort(graph: StateKeyGraph): string[] {\n  const sorted: string[] = [];\n  const visited: PlainObjectOf<boolean> = {};\n\n  const visit = (name: string, ancestors: string[] = []) => {\n    if (!Array.isArray(ancestors)) {\n      ancestors = [];\n    }\n\n    ancestors.push(name);\n    visited[name] = true;\n\n    graph[name].forEach((dep: string) => {\n      // Caretaker note: we have still left the `typeof` condition in order to avoid\n      // creating a breaking change for projects that still use the View Engine.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && ancestors.indexOf(dep) >= 0) {\n        throw new Error(\n          `Circular dependency '${dep}' is required by '${name}': ${ancestors.join(' -> ')}`\n        );\n      }\n\n      if (visited[dep]) {\n        return;\n      }\n\n      visit(dep, ancestors.slice(0));\n    });\n\n    if (sorted.indexOf(name) < 0) {\n      sorted.push(name);\n    }\n  };\n\n  Object.keys(graph).forEach(k => visit(k));\n\n  return sorted.reverse();\n}\n\n/**\n * Returns if the parameter is a object or not.\n *\n * @ignore\n */\nexport function isObject(obj: any) {\n  return (typeof obj === 'object' && obj !== null) || typeof obj === 'function';\n}\n","import { OperatorFunction, Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { ActionType } from '../actions/symbols';\nimport { getActionTypeFromInstance } from '../utils/utils';\nimport { ActionContext, ActionStatus } from '../actions-stream';\n\ntype TupleKeys<T extends any[]> = Exclude<keyof T, keyof []>;\n\n/**\n * Given a POJO, returns the POJO type, given a class constructor object, returns the type of the class.\n *\n * This utility type exists due to the complexity of ActionType being either an ActionDef class or the plain\n * `{ type: string }` type (or similar compatible POJO types).\n */\ntype Constructed<T> = T extends new (...args: any[]) => infer U ? U : T;\n\nexport interface ActionCompletion<T = any, E = Error> {\n  action: T;\n  result: {\n    successful: boolean;\n    canceled: boolean;\n    error?: E;\n  };\n}\n\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will grab actions that have just been dispatched as well as actions that have completed\n */\nexport function ofAction<T extends ActionType[]>(\n  ...allowedTypes: T\n): OperatorFunction<\n  ActionContext<Constructed<T[TupleKeys<T>]>>,\n  Constructed<T[TupleKeys<T>]>\n> {\n  return ofActionOperator(allowedTypes);\n}\n\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been dispatched\n */\nexport function ofActionDispatched<T extends ActionType[]>(\n  ...allowedTypes: T\n): OperatorFunction<\n  ActionContext<Constructed<T[TupleKeys<T>]>>,\n  Constructed<T[TupleKeys<T>]>\n> {\n  return ofActionOperator(allowedTypes, [ActionStatus.Dispatched]);\n}\n\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been successfully completed\n */\nexport function ofActionSuccessful<T extends ActionType[]>(\n  ...allowedTypes: T\n): OperatorFunction<\n  ActionContext<Constructed<T[TupleKeys<T>]>>,\n  Constructed<T[TupleKeys<T>]>\n> {\n  return ofActionOperator(allowedTypes, [ActionStatus.Successful]);\n}\n\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been canceled\n */\nexport function ofActionCanceled<T extends ActionType[]>(\n  ...allowedTypes: T\n): OperatorFunction<\n  ActionContext<Constructed<T[TupleKeys<T>]>>,\n  Constructed<T[TupleKeys<T>]>\n> {\n  return ofActionOperator(allowedTypes, [ActionStatus.Canceled]);\n}\n\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just been completed\n */\nexport function ofActionCompleted<T extends ActionType[]>(\n  ...allowedTypes: T\n): OperatorFunction<\n  ActionContext<Constructed<T[TupleKeys<T>]>>,\n  ActionCompletion<Constructed<T[TupleKeys<T>]>>\n> {\n  const allowedStatuses = [\n    ActionStatus.Successful,\n    ActionStatus.Canceled,\n    ActionStatus.Errored\n  ];\n  return ofActionOperator(allowedTypes, allowedStatuses, mapActionResult);\n}\n\n/**\n * RxJS operator for selecting out specific actions.\n *\n * This will ONLY grab actions that have just thrown an error\n */\nexport function ofActionErrored<T extends ActionType[]>(\n  ...allowedTypes: T\n): OperatorFunction<\n  ActionContext<Constructed<T[TupleKeys<T>]>>,\n  Constructed<T[TupleKeys<T>]>\n> {\n  return ofActionOperator(allowedTypes, [ActionStatus.Errored]);\n}\n\nfunction ofActionOperator(\n  allowedTypes: ActionType[],\n  statuses?: ActionStatus[],\n  // This actually could've been `OperatorFunction<ActionContext, ActionCompletion | any>`,\n  // since it maps either to `ctx.action` OR to `ActionCompletion`. But `ActionCompleteion | any`\n  // defaults to `any`, thus there is no sense from union type.\n  mapOperator: () => OperatorFunction<ActionContext, any> = mapAction\n): OperatorFunction<ActionContext, any> {\n  const allowedMap = createAllowedActionTypesMap(allowedTypes);\n  const allowedStatusMap = statuses && createAllowedStatusesMap(statuses);\n  return function(o: Observable<ActionContext>) {\n    return o.pipe(filterStatus(allowedMap, allowedStatusMap), mapOperator());\n  };\n}\n\nfunction filterStatus(allowedTypes: FilterMap, allowedStatuses?: FilterMap) {\n  return filter((ctx: ActionContext) => {\n    const actionType = getActionTypeFromInstance(ctx.action)!;\n    const typeMatch = allowedTypes[actionType];\n    const statusMatch = allowedStatuses ? allowedStatuses[ctx.status] : true;\n    return typeMatch && statusMatch;\n  });\n}\n\nfunction mapActionResult(): OperatorFunction<ActionContext, ActionCompletion> {\n  return map(({ action, status, error }: ActionContext) => {\n    return <ActionCompletion>{\n      action,\n      result: {\n        successful: ActionStatus.Successful === status,\n        canceled: ActionStatus.Canceled === status,\n        error\n      }\n    };\n  });\n}\n\nfunction mapAction<T = any>(): OperatorFunction<ActionContext, T> {\n  return map((ctx: ActionContext) => <T>ctx.action);\n}\n\ninterface FilterMap {\n  [key: string]: boolean;\n}\n\nfunction createAllowedActionTypesMap(types: ActionType[]): FilterMap {\n  return types.reduce((filterMap: FilterMap, klass: any) => {\n    filterMap[getActionTypeFromInstance(klass)!] = true;\n    return filterMap;\n  }, <FilterMap>{});\n}\n\nfunction createAllowedStatusesMap(statuses: ActionStatus[]): FilterMap {\n  return statuses.reduce((filterMap: FilterMap, status: ActionStatus) => {\n    filterMap[status] = true;\n    return filterMap;\n  }, <FilterMap>{});\n}\n","import { getStoreMetadata, StateClassInternal, StatesByName } from '../internal/internals';\nimport {\n  throwStateDecoratorError,\n  throwStateNameError,\n  throwStateNamePropertyError,\n  throwStateUniqueError\n} from '../configs/messages.config';\n\nconst stateNameRegex = new RegExp('^[a-zA-Z0-9_]+$');\n\nexport function ensureStateNameIsValid(name: string | null): void | never {\n  if (!name) {\n    throwStateNamePropertyError();\n  } else if (!stateNameRegex.test(name)) {\n    throwStateNameError(name);\n  }\n}\n\nexport function ensureStateNameIsUnique(\n  stateName: string,\n  state: StateClassInternal,\n  statesByName: StatesByName\n): void | never {\n  const existingState = statesByName[stateName];\n  if (existingState && existingState !== state) {\n    throwStateUniqueError(stateName, state.name, existingState.name);\n  }\n}\n\nexport function ensureStatesAreDecorated(stateClasses: StateClassInternal[]): void | never {\n  stateClasses.forEach((stateClass: StateClassInternal) => {\n    if (!getStoreMetadata(stateClass)) {\n      throwStateDecoratorError(stateClass.name);\n    }\n  });\n}\n","import { getUndecoratedStateInIvyWarningMessage } from '../configs/messages.config';\n\n/**\n * All provided or injected tokens must have `@Injectable` decorator\n * (previously, injected tokens without `@Injectable` were allowed\n * if another decorator was used, e.g. pipes).\n */\nexport function ensureStateClassIsInjectable(stateClass: any): void {\n  if (jit_hasInjectableAnnotation(stateClass) || aot_hasNgInjectableDef(stateClass)) {\n    return;\n  }\n\n  console.warn(getUndecoratedStateInIvyWarningMessage(stateClass.name));\n}\n\nfunction aot_hasNgInjectableDef(stateClass: any): boolean {\n  // `ɵprov` is a static property added by the NGCC compiler. It always exists in\n  // AOT mode because this property is added before runtime. If an application is running in\n  // JIT mode then this property can be added by the `@Injectable()` decorator. The `@Injectable()`\n  // decorator has to go after the `@State()` decorator, thus we prevent users from unwanted DI errors.\n  return !!stateClass.ɵprov;\n}\n\nfunction jit_hasInjectableAnnotation(stateClass: any): boolean {\n  // `ɵprov` doesn't exist in JIT mode (for instance when running unit tests with Jest).\n  const annotations = stateClass.__annotations__ || [];\n  return annotations.some((annotation: any) => annotation?.ngMetadataName === 'Injectable');\n}\n","import { PlainObject } from '@ngxs/store/internals';\n\n/**\n * Init action\n */\nexport class InitState {\n  static readonly type = '@@INIT';\n}\n\n/**\n * Update action\n */\nexport class UpdateState {\n  static readonly type = '@@UPDATE_STATE';\n\n  constructor(public addedStates?: PlainObject) {}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { ActionType } from '../actions/symbols';\n\nexport interface NgxsDevelopmentOptions {\n  // This allows setting only `true` because there's no reason to set `false`.\n  // Developers may just skip importing the development module at all.\n  warnOnUnhandledActions:\n    | true\n    | {\n        ignore: ActionType[];\n      };\n}\n\nexport const NGXS_DEVELOPMENT_OPTIONS = new InjectionToken<NgxsDevelopmentOptions>(\n  'NGXS_DEVELOPMENT_OPTIONS',\n  {\n    providedIn: 'root',\n    factory: () => ({ warnOnUnhandledActions: true })\n  }\n);\n","import { Inject, Injectable } from '@angular/core';\n\nimport { ActionType } from '../actions/symbols';\nimport { getActionTypeFromInstance } from '../utils/utils';\nimport { InitState, UpdateState } from '../actions/actions';\nimport { NgxsDevelopmentOptions, NGXS_DEVELOPMENT_OPTIONS } from './symbols';\n\n@Injectable()\nexport class NgxsUnhandledActionsLogger {\n  /**\n   * These actions should be ignored by default; the user can increase this\n   * list in the future via the `ignoreActions` method.\n   */\n  private _ignoredActions = new Set<string>([InitState.type, UpdateState.type]);\n\n  constructor(@Inject(NGXS_DEVELOPMENT_OPTIONS) options: NgxsDevelopmentOptions) {\n    if (typeof options.warnOnUnhandledActions === 'object') {\n      this.ignoreActions(...options.warnOnUnhandledActions.ignore);\n    }\n  }\n\n  /**\n   * Adds actions to the internal list of actions that should be ignored.\n   */\n  ignoreActions(...actions: ActionType[]): void {\n    for (const action of actions) {\n      this._ignoredActions.add(action.type);\n    }\n  }\n\n  /** @internal */\n  warn(action: any): void {\n    const actionShouldBeIgnored = Array.from(this._ignoredActions).some(\n      type => type === getActionTypeFromInstance(action)\n    );\n\n    if (actionShouldBeIgnored) {\n      return;\n    }\n\n    action =\n      action.constructor && action.constructor.name !== 'Object'\n        ? action.constructor.name\n        : action.type;\n\n    console.warn(\n      `The ${action} action has been dispatched but hasn't been handled. This may happen if the state with an action handler for this action is not registered.`\n    );\n  }\n}\n","import { MonoTypeOperatorFunction, Observable, Observer } from 'rxjs';\nimport { NgxsExecutionStrategy } from '../execution/symbols';\n\n/**\n * Returns operator that will run\n * `subscribe` outside of the ngxs execution context\n */\nexport function leaveNgxs<T>(\n  ngxsExecutionStrategy: NgxsExecutionStrategy\n): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    return new Observable((sink: Observer<T>) => {\n      return source.subscribe({\n        next(value) {\n          ngxsExecutionStrategy.leave(() => sink.next(value));\n        },\n        error(error) {\n          ngxsExecutionStrategy.leave(() => sink.error(error));\n        },\n        complete() {\n          ngxsExecutionStrategy.leave(() => sink.complete());\n        }\n      });\n    });\n  };\n}\n","import { BehaviorSubject, Subject } from 'rxjs';\n\n/**\n * This wraps the provided function, and will enforce the following:\n * - The calls will execute in the order that they are made\n * - A call will only be initiated when the previous call has completed\n * - If there is a call currently executing then the new call will be added\n *   to the queue and the function will return immediately\n *\n * NOTE: The following assumptions about the operation must hold true:\n * - The operation is synchronous in nature\n * - If any asynchronous side effects of the call exist, it should not\n *   have any bearing on the correctness of the next call in the queue\n * - The operation has a void return\n * - The caller should not assume that the call has completed upon\n *   return of the function\n * - The caller can assume that all the queued calls will complete\n *   within the current microtask\n * - The only way that a call will encounter another call in the queue\n *   would be if the call at the front of the queue initiated this call\n *   as part of its synchronous execution\n */\nfunction orderedQueueOperation<TArgs extends any[]>(operation: (...args: TArgs) => void) {\n  const callsQueue: TArgs[] = [];\n  let busyPushingNext = false;\n  return function callOperation(...args: TArgs) {\n    if (busyPushingNext) {\n      callsQueue.unshift(args);\n      return;\n    }\n    busyPushingNext = true;\n    operation(...args);\n    while (callsQueue.length > 0) {\n      const nextCallArgs = callsQueue.pop();\n      nextCallArgs && operation(...nextCallArgs);\n    }\n    busyPushingNext = false;\n  };\n}\n\n/**\n * Custom Subject that ensures that subscribers are notified of values in the order that they arrived.\n * A standard Subject does not have this guarantee.\n * For example, given the following code:\n * ```typescript\n *   const subject = new Subject<string>();\n     subject.subscribe(value => {\n       if (value === 'start') subject.next('end');\n     });\n     subject.subscribe(value => { });\n     subject.next('start');\n * ```\n * When `subject` is a standard `Subject<T>` the second subscriber would recieve `end` and then `start`.\n * When `subject` is a `OrderedSubject<T>` the second subscriber would recieve `start` and then `end`.\n */\nexport class OrderedSubject<T> extends Subject<T> {\n  private _orderedNext = orderedQueueOperation((value?: T) => super.next(<T>value));\n\n  next(value?: T): void {\n    this._orderedNext(value);\n  }\n}\n\n/**\n * Custom BehaviorSubject that ensures that subscribers are notified of values in the order that they arrived.\n * A standard BehaviorSubject does not have this guarantee.\n * For example, given the following code:\n * ```typescript\n *   const subject = new BehaviorSubject<string>();\n     subject.subscribe(value => {\n       if (value === 'start') subject.next('end');\n     });\n     subject.subscribe(value => { });\n     subject.next('start');\n * ```\n * When `subject` is a standard `BehaviorSubject<T>` the second subscriber would recieve `end` and then `start`.\n * When `subject` is a `OrderedBehaviorSubject<T>` the second subscriber would recieve `start` and then `end`.\n */\nexport class OrderedBehaviorSubject<T> extends BehaviorSubject<T> {\n  private _orderedNext = orderedQueueOperation((value: T) => super.next(value));\n  private _currentValue: T;\n\n  constructor(value: T) {\n    super(value);\n    this._currentValue = value;\n  }\n\n  getValue(): T {\n    return this._currentValue;\n  }\n\n  next(value: T): void {\n    this._currentValue = value;\n    this._orderedNext(value);\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { NgxsExecutionStrategy, NGXS_EXECUTION_STRATEGY } from './symbols';\n\n@Injectable({ providedIn: 'root' })\nexport class InternalNgxsExecutionStrategy implements NgxsExecutionStrategy {\n  constructor(\n    @Inject(NGXS_EXECUTION_STRATEGY) private _executionStrategy: NgxsExecutionStrategy\n  ) {}\n\n  enter<T>(func: () => T): T {\n    return this._executionStrategy.enter(func);\n  }\n\n  leave<T>(func: () => T): T {\n    return this._executionStrategy.leave(func);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { leaveNgxs } from './operators/leave-ngxs';\nimport { InternalNgxsExecutionStrategy } from './execution/internal-ngxs-execution-strategy';\nimport { OrderedSubject } from './internal/custom-rxjs-subjects';\n\n/**\n * Status of a dispatched action\n */\nexport const enum ActionStatus {\n  Dispatched = 'DISPATCHED',\n  Successful = 'SUCCESSFUL',\n  Canceled = 'CANCELED',\n  Errored = 'ERRORED'\n}\n\nexport interface ActionContext<T = any> {\n  status: ActionStatus;\n  action: T;\n  error?: Error;\n}\n\n/**\n * Internal Action stream that is emitted anytime an action is dispatched.\n */\n@Injectable({ providedIn: 'root' })\nexport class InternalActions extends OrderedSubject<ActionContext> implements OnDestroy {\n  ngOnDestroy(): void {\n    this.complete();\n  }\n}\n\n/**\n * Action stream that is emitted anytime an action is dispatched.\n *\n * You can listen to this in services to react without stores.\n */\n@Injectable({ providedIn: 'root' })\nexport class Actions extends Observable<ActionContext> {\n  constructor(\n    internalActions$: InternalActions,\n    internalExecutionStrategy: InternalNgxsExecutionStrategy\n  ) {\n    const sharedInternalActions$ = internalActions$.pipe(\n      leaveNgxs(internalExecutionStrategy),\n      // The `InternalActions` subject emits outside of the Angular zone.\n      // We have to re-enter the Angular zone for any incoming consumer.\n      // The `share()` operator reduces the number of change detections.\n      // This would call leave only once for any stream emission across all active subscribers.\n      share()\n    );\n\n    super(observer => {\n      const childSubscription = sharedInternalActions$.subscribe({\n        next: ctx => observer.next(ctx),\n        error: error => observer.error(error),\n        complete: () => observer.complete()\n      });\n\n      observer.add(childSubscription);\n    });\n  }\n}\n","export type StateFn = (...args: any[]) => any;\n\n/**\n * Composes a array of functions from left to right. Example:\n *\n *      compose([fn, final])(state, action);\n *\n * then the funcs have a signature like:\n *\n *      function fn (state, action, next) {\n *          console.log('here', state, action, next);\n *          return next(state, action);\n *      }\n *\n *      function final (state, action) {\n *          console.log('here', state, action);\n *          return state;\n *      }\n *\n * the last function should not call `next`.\n *\n * @ignore\n */\nexport const compose = (funcs: StateFn[]) => (...args: any[]) => {\n  const curr = funcs.shift()!;\n  return curr(...args, (...nextArgs: any[]) => compose(funcs)(...nextArgs));\n};\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { leaveNgxs } from '../operators/leave-ngxs';\nimport { NgxsExecutionStrategy } from '../execution/symbols';\n\n/**\n * This operator is used for piping the observable result\n * from the `dispatch()`. It has a \"smart\" error handling\n * strategy that allows us to decide whether we propagate\n * errors to Angular's `ErrorHandler` or enable users to\n * handle them manually. We consider following cases:\n * 1) `store.dispatch()` (no subscribe) -> call `handleError()`\n * 2) `store.dispatch().subscribe()` (no error callback) -> call `handleError()`\n * 3) `store.dispatch().subscribe({ error: ... })` -> don't call `handleError()`\n * 4) `toPromise()` without `catch` -> do `handleError()`\n * 5) `toPromise()` with `catch` -> don't `handleError()`\n */\nexport function ngxsErrorHandler<T>(\n  internalErrorReporter: InternalErrorReporter,\n  ngxsExecutionStrategy: NgxsExecutionStrategy\n) {\n  return (source: Observable<T>) => {\n    let subscribed = false;\n\n    source.subscribe({\n      error: error => {\n        // Do not trigger change detection for a microtask. This depends on the execution\n        // strategy being used, but the default `DispatchOutsideZoneNgxsExecutionStrategy`\n        // leaves the Angular zone.\n        ngxsExecutionStrategy.enter(() =>\n          Promise.resolve().then(() => {\n            if (!subscribed) {\n              ngxsExecutionStrategy.leave(() =>\n                internalErrorReporter.reportErrorSafely(error)\n              );\n            }\n          })\n        );\n      }\n    });\n\n    return new Observable(subscriber => {\n      subscribed = true;\n      return source.pipe(leaveNgxs(ngxsExecutionStrategy)).subscribe(subscriber);\n    });\n  };\n}\n\n@Injectable({ providedIn: 'root' })\nexport class InternalErrorReporter {\n  /** Will be set lazily to be backward compatible. */\n  private _errorHandler: ErrorHandler = null!;\n\n  constructor(private _injector: Injector) {}\n\n  reportErrorSafely(error: any): void {\n    if (this._errorHandler === null) {\n      this._errorHandler = this._injector.get(ErrorHandler);\n    }\n    // The `try-catch` is used to avoid handling the error twice. Suppose we call\n    // `handleError` which re-throws the error internally. The re-thrown error will\n    // be caught by zone.js which will then get to the `zone.onError.emit()` and the\n    // `onError` subscriber will call `handleError` again.\n    try {\n      this._errorHandler.handleError(error);\n    } catch {}\n  }\n}\n","import { Inject, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { NGXS_PLUGINS, NgxsPlugin, NgxsPluginFn } from './symbols';\n\n@Injectable()\nexport class PluginManager {\n  public plugins: NgxsPluginFn[] = [];\n\n  constructor(\n    @Optional()\n    @SkipSelf()\n    private _parentManager: PluginManager,\n    @Inject(NGXS_PLUGINS)\n    @Optional()\n    private _pluginHandlers: NgxsPlugin[]\n  ) {\n    this.registerHandlers();\n  }\n\n  private get rootPlugins(): NgxsPluginFn[] {\n    return (this._parentManager && this._parentManager.plugins) || this.plugins;\n  }\n\n  private registerHandlers(): void {\n    const pluginHandlers: NgxsPluginFn[] = this.getPluginHandlers();\n    this.rootPlugins.push(...pluginHandlers);\n  }\n\n  private getPluginHandlers(): NgxsPluginFn[] {\n    const handlers: NgxsPlugin[] = this._pluginHandlers || [];\n    return handlers.map(\n      (plugin: NgxsPlugin) =>\n        (plugin.handle ? plugin.handle.bind(plugin) : plugin) as NgxsPluginFn\n    );\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { PlainObject } from '@ngxs/store/internals';\n\nimport { OrderedBehaviorSubject } from './custom-rxjs-subjects';\n\n/**\n * BehaviorSubject of the entire state.\n * @ignore\n */\n@Injectable({ providedIn: 'root' })\nexport class StateStream extends OrderedBehaviorSubject<PlainObject> implements OnDestroy {\n  constructor() {\n    super({});\n  }\n\n  ngOnDestroy(): void {\n    // The `StateStream` should never emit values once the root view is removed, e.g. when the `NgModuleRef.destroy()` is called.\n    // This will eliminate memory leaks in server-side rendered apps where the `StateStream` is created per each HTTP request, users\n    // might forget to unsubscribe from `store.select` or `store.subscribe`, thus this will lead to huge memory leaks in SSR apps.\n    this.complete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EMPTY, forkJoin, Observable, of, Subject, throwError } from 'rxjs';\nimport { exhaustMap, filter, shareReplay, take } from 'rxjs/operators';\n\nimport { compose } from '../utils/compose';\nimport { InternalErrorReporter, ngxsErrorHandler } from './error-handler';\nimport { ActionContext, ActionStatus, InternalActions } from '../actions-stream';\nimport { StateStream } from './state-stream';\nimport { PluginManager } from '../plugin-manager';\nimport { InternalNgxsExecutionStrategy } from '../execution/internal-ngxs-execution-strategy';\nimport { getActionTypeFromInstance } from '../utils/utils';\n\n/**\n * Internal Action result stream that is emitted when an action is completed.\n * This is used as a method of returning the action result to the dispatcher\n * for the observable returned by the dispatch(...) call.\n * The dispatcher then asynchronously pushes the result from this stream onto the main action stream as a result.\n */\n@Injectable({ providedIn: 'root' })\nexport class InternalDispatchedActionResults extends Subject<ActionContext> {}\n\n@Injectable({ providedIn: 'root' })\nexport class InternalDispatcher {\n  constructor(\n    private _actions: InternalActions,\n    private _actionResults: InternalDispatchedActionResults,\n    private _pluginManager: PluginManager,\n    private _stateStream: StateStream,\n    private _ngxsExecutionStrategy: InternalNgxsExecutionStrategy,\n    private _internalErrorReporter: InternalErrorReporter\n  ) {}\n\n  /**\n   * Dispatches event(s).\n   */\n  dispatch(actionOrActions: any | any[]): Observable<any> {\n    const result = this._ngxsExecutionStrategy.enter(() =>\n      this.dispatchByEvents(actionOrActions)\n    );\n\n    return result.pipe(\n      ngxsErrorHandler(this._internalErrorReporter, this._ngxsExecutionStrategy)\n    );\n  }\n\n  private dispatchByEvents(actionOrActions: any | any[]): Observable<any> {\n    if (Array.isArray(actionOrActions)) {\n      if (actionOrActions.length === 0) return of(this._stateStream.getValue());\n      return forkJoin(actionOrActions.map(action => this.dispatchSingle(action)));\n    } else {\n      return this.dispatchSingle(actionOrActions);\n    }\n  }\n\n  private dispatchSingle(action: any): Observable<any> {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const type: string | undefined = getActionTypeFromInstance(action);\n      if (!type) {\n        const error = new Error(\n          `This action doesn't have a type property: ${action.constructor.name}`\n        );\n        return throwError(error);\n      }\n    }\n\n    const prevState = this._stateStream.getValue();\n    const plugins = this._pluginManager.plugins;\n\n    return (\n      compose([\n        ...plugins,\n        (nextState: any, nextAction: any) => {\n          if (nextState !== prevState) {\n            this._stateStream.next(nextState);\n          }\n          const actionResult$ = this.getActionResultStream(nextAction);\n          actionResult$.subscribe(ctx => this._actions.next(ctx));\n          this._actions.next({ action: nextAction, status: ActionStatus.Dispatched });\n          return this.createDispatchObservable(actionResult$);\n        }\n      ])(prevState, action) as Observable<any>\n    ).pipe(shareReplay());\n  }\n\n  private getActionResultStream(action: any): Observable<ActionContext> {\n    return this._actionResults.pipe(\n      filter(\n        (ctx: ActionContext) => ctx.action === action && ctx.status !== ActionStatus.Dispatched\n      ),\n      take(1),\n      shareReplay()\n    );\n  }\n\n  private createDispatchObservable(actionResult$: Observable<ActionContext>): Observable<any> {\n    return actionResult$\n      .pipe(\n        exhaustMap((ctx: ActionContext) => {\n          switch (ctx.status) {\n            case ActionStatus.Successful:\n              return of(this._stateStream.getValue());\n            case ActionStatus.Errored:\n              return throwError(ctx.error);\n            default:\n              return EMPTY;\n          }\n        })\n      )\n      .pipe(shareReplay());\n  }\n}\n","import {\n  throwPatchingArrayError,\n  throwPatchingPrimitiveError\n} from '../configs/messages.config';\nimport { ExistingState, StateOperator } from '@ngxs/store/operators';\n\nexport function simplePatch<T>(value: Partial<T>): StateOperator<T> {\n  return (existingState: ExistingState<T>) => {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (Array.isArray(value)) {\n        throwPatchingArrayError();\n      } else if (typeof value !== 'object') {\n        throwPatchingPrimitiveError();\n      }\n    }\n\n    const newState: any = { ...(existingState as any) };\n    for (const key in value) {\n      // deep clone for patch compatibility\n      newState[key] = (value as any)[key];\n    }\n\n    return newState as T;\n  };\n}\n","/**\n * Object freeze code\n * https://github.com/jsdf/deep-freeze\n */\nexport const deepFreeze = (o: any) => {\n  Object.freeze(o);\n\n  const oIsFunction = typeof o === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      hasOwnProp.call(o, prop) &&\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n      o[prop] !== null &&\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n};\n","import { Injectable } from '@angular/core';\n\nimport { StateOperations, StatesAndDefaults } from '../internal/internals';\nimport { InternalDispatcher } from '../internal/dispatcher';\nimport { StateStream } from './state-stream';\nimport { NgxsConfig } from '../symbols';\nimport { deepFreeze } from '../utils/freeze';\n\n/**\n * @ignore\n */\n@Injectable({ providedIn: 'root' })\nexport class InternalStateOperations {\n  constructor(\n    private _stateStream: StateStream,\n    private _dispatcher: InternalDispatcher,\n    private _config: NgxsConfig\n  ) {}\n\n  /**\n   * Returns the root state operators.\n   */\n  getRootStateOperations(): StateOperations<any> {\n    const rootStateOperations = {\n      getState: () => this._stateStream.getValue(),\n      setState: (newState: any) => this._stateStream.next(newState),\n      dispatch: (actionOrActions: any | any[]) => this._dispatcher.dispatch(actionOrActions)\n    };\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      return this._config.developmentMode\n        ? ensureStateAndActionsAreImmutable(rootStateOperations)\n        : rootStateOperations;\n    } else {\n      return rootStateOperations;\n    }\n  }\n\n  setStateToTheCurrentWithNew(results: StatesAndDefaults): void {\n    const stateOperations: StateOperations<any> = this.getRootStateOperations();\n\n    // Get our current stream\n    const currentState = stateOperations.getState();\n    // Set the state to the current + new\n    stateOperations.setState({ ...currentState, ...results.defaults });\n  }\n}\n\nfunction ensureStateAndActionsAreImmutable(root: StateOperations<any>): StateOperations<any> {\n  return {\n    getState: () => root.getState(),\n    setState: value => {\n      const frozenValue = deepFreeze(value);\n      return root.setState(frozenValue);\n    },\n    dispatch: actions => {\n      return root.dispatch(actions);\n    }\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ExistingState, StateOperator, isStateOperator } from '@ngxs/store/operators';\n\nimport { StateContext } from '../symbols';\nimport { MappedStore, StateOperations } from '../internal/internals';\nimport { setValue, getValue } from '../utils/utils';\nimport { InternalStateOperations } from '../internal/state-operations';\nimport { simplePatch } from './state-operators';\n\n/**\n * State Context factory class\n * @ignore\n */\n@Injectable({ providedIn: 'root' })\nexport class StateContextFactory {\n  constructor(private _internalStateOperations: InternalStateOperations) {}\n\n  /**\n   * Create the state context\n   */\n  createStateContext<T>(mappedStore: MappedStore): StateContext<T> {\n    const root = this._internalStateOperations.getRootStateOperations();\n\n    return {\n      getState(): T {\n        const currentAppState = root.getState();\n        return getState(currentAppState, mappedStore.path);\n      },\n      patchState(val: Partial<T>): T {\n        const currentAppState = root.getState();\n        const patchOperator = simplePatch<T>(val);\n        return setStateFromOperator(root, currentAppState, patchOperator, mappedStore.path);\n      },\n      setState(val: T | StateOperator<T>): T {\n        const currentAppState = root.getState();\n        return isStateOperator(val)\n          ? setStateFromOperator(root, currentAppState, val, mappedStore.path)\n          : setStateValue(root, currentAppState, val, mappedStore.path);\n      },\n      dispatch(actions: any | any[]): Observable<void> {\n        return root.dispatch(actions);\n      }\n    };\n  }\n}\n\nfunction setStateValue<T>(\n  root: StateOperations<any>,\n  currentAppState: any,\n  newValue: T,\n  path: string\n): any {\n  const newAppState = setValue(currentAppState, path, newValue);\n  root.setState(newAppState);\n  return newAppState;\n  // In doing this refactoring I noticed that there is a 'bug' where the\n  // application state is returned instead of this state slice.\n  // This has worked this way since the beginning see:\n  // https://github.com/ngxs/store/blame/324c667b4b7debd8eb979006c67ca0ae347d88cd/src/state-factory.ts\n  // This needs to be fixed, but is a 'breaking' change.\n  // I will do this fix in a subsequent PR and we can decide how to handle it.\n}\n\nfunction setStateFromOperator<T>(\n  root: StateOperations<any>,\n  currentAppState: any,\n  stateOperator: StateOperator<T>,\n  path: string\n) {\n  const local = getState(currentAppState, path);\n  const newValue = stateOperator(local as ExistingState<T>);\n  return setStateValue(root, currentAppState, newValue, path);\n}\n\nfunction getState<T>(currentAppState: any, path: string): T {\n  return getValue(currentAppState, path);\n}\n","import { Injectable, Injector, Optional, SkipSelf, Inject, OnDestroy } from '@angular/core';\nimport {\n  forkJoin,\n  from,\n  Observable,\n  of,\n  throwError,\n  Subscription,\n  Subject,\n  isObservable\n} from 'rxjs';\nimport {\n  catchError,\n  defaultIfEmpty,\n  filter,\n  map,\n  mergeMap,\n  shareReplay,\n  takeUntil\n} from 'rxjs/operators';\nimport { INITIAL_STATE_TOKEN, PlainObjectOf, memoize } from '@ngxs/store/internals';\n\nimport { META_KEY, NgxsConfig } from '../symbols';\nimport {\n  buildGraph,\n  findFullParentPath,\n  isObject,\n  MappedStore,\n  MetaDataModel,\n  nameToState,\n  propGetter,\n  StateClassInternal,\n  StateKeyGraph,\n  StatesAndDefaults,\n  StatesByName,\n  topologicalSort,\n  RuntimeSelectorContext,\n  SharedSelectorOptions,\n  getStoreMetadata\n} from './internals';\nimport { getActionTypeFromInstance, getValue, setValue } from '../utils/utils';\nimport { ofActionDispatched } from '../operators/of-action';\nimport { ActionContext, ActionStatus, InternalActions } from '../actions-stream';\nimport { InternalDispatchedActionResults } from '../internal/dispatcher';\nimport { StateContextFactory } from '../internal/state-context-factory';\nimport { ensureStateNameIsUnique, ensureStatesAreDecorated } from '../utils/store-validators';\nimport { ensureStateClassIsInjectable } from '../ivy/ivy-enabled-in-dev-mode';\nimport { NgxsUnhandledActionsLogger } from '../dev-features/ngxs-unhandled-actions-logger';\n\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || ngDevMode;\n\n/**\n * The `StateFactory` class adds root and feature states to the graph.\n * This extracts state names from state classes, checks if they already\n * exist in the global graph, throws errors if their names are invalid, etc.\n * See its constructor, state factories inject state factories that are\n * parent-level providers. This is required to get feature states from the\n * injector on the same level.\n *\n * The `NgxsModule.forFeature(...)` returns `providers: [StateFactory, ...states]`.\n * The `StateFactory` is initialized on the feature level and goes through `...states`\n * to get them from the injector through `injector.get(state)`.\n * @ignore\n */\n@Injectable()\nexport class StateFactory implements OnDestroy {\n  private _actionsSubscription: Subscription | null = null;\n\n  constructor(\n    private _injector: Injector,\n    private _config: NgxsConfig,\n    @Optional()\n    @SkipSelf()\n    private _parentFactory: StateFactory,\n    private _actions: InternalActions,\n    private _actionResults: InternalDispatchedActionResults,\n    private _stateContextFactory: StateContextFactory,\n    @Optional()\n    @Inject(INITIAL_STATE_TOKEN)\n    private _initialState: any\n  ) {}\n\n  private _states: MappedStore[] = [];\n\n  get states(): MappedStore[] {\n    return this._parentFactory ? this._parentFactory.states : this._states;\n  }\n\n  private _statesByName: StatesByName = {};\n\n  get statesByName(): StatesByName {\n    return this._parentFactory ? this._parentFactory.statesByName : this._statesByName;\n  }\n\n  private _statePaths: PlainObjectOf<string> = {};\n\n  private get statePaths(): PlainObjectOf<string> {\n    return this._parentFactory ? this._parentFactory.statePaths : this._statePaths;\n  }\n\n  getRuntimeSelectorContext = memoize(() => {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const stateFactory = this;\n\n    function resolveGetter(key: string) {\n      const path = stateFactory.statePaths[key];\n      return path ? propGetter(path.split('.'), stateFactory._config) : null;\n    }\n\n    const context: RuntimeSelectorContext = this._parentFactory\n      ? this._parentFactory.getRuntimeSelectorContext()\n      : {\n          getStateGetter(key: string) {\n            let getter = resolveGetter(key);\n            if (getter) {\n              return getter;\n            }\n            return (...args) => {\n              // Late loaded getter\n              if (!getter) {\n                getter = resolveGetter(key);\n              }\n              return getter ? getter(...args) : undefined;\n            };\n          },\n          getSelectorOptions(localOptions?: SharedSelectorOptions) {\n            const globalSelectorOptions = stateFactory._config.selectorOptions;\n            return {\n              ...globalSelectorOptions,\n              ...(localOptions || {})\n            };\n          }\n        };\n    return context;\n  });\n\n  private static _cloneDefaults(defaults: any): any {\n    let value = defaults;\n\n    if (Array.isArray(defaults)) {\n      value = defaults.slice();\n    } else if (isObject(defaults)) {\n      value = { ...defaults };\n    } else if (defaults === undefined) {\n      value = {};\n    }\n\n    return value;\n  }\n\n  ngOnDestroy(): void {\n    this._actionsSubscription?.unsubscribe();\n  }\n\n  /**\n   * Add a new state to the global defs.\n   */\n  add(stateClasses: StateClassInternal[]): MappedStore[] {\n    if (NG_DEV_MODE) {\n      ensureStatesAreDecorated(stateClasses);\n    }\n\n    const { newStates } = this.addToStatesMap(stateClasses);\n    if (!newStates.length) return [];\n\n    const stateGraph: StateKeyGraph = buildGraph(newStates);\n    const sortedStates: string[] = topologicalSort(stateGraph);\n    const paths: PlainObjectOf<string> = findFullParentPath(stateGraph);\n    const nameGraph: PlainObjectOf<StateClassInternal> = nameToState(newStates);\n    const bootstrappedStores: MappedStore[] = [];\n\n    for (const name of sortedStates) {\n      const stateClass: StateClassInternal = nameGraph[name];\n      const path: string = paths[name];\n      const meta: MetaDataModel = stateClass[META_KEY]!;\n\n      this.addRuntimeInfoToMeta(meta, path);\n\n      // Note: previously we called `ensureStateClassIsInjectable` within the\n      // `State` decorator. This check is moved here because the `ɵprov` property\n      // will not exist on the class in JIT mode (because it's set asynchronously\n      // during JIT compilation through `Object.defineProperty`).\n      if (NG_DEV_MODE) {\n        ensureStateClassIsInjectable(stateClass);\n      }\n\n      const stateMap: MappedStore = {\n        name,\n        path,\n        isInitialised: false,\n        actions: meta.actions,\n        instance: this._injector.get(stateClass),\n        defaults: StateFactory._cloneDefaults(meta.defaults)\n      };\n\n      // ensure our store hasn't already been added\n      // but don't throw since it could be lazy\n      // loaded from different paths\n      if (!this.hasBeenMountedAndBootstrapped(name, path)) {\n        bootstrappedStores.push(stateMap);\n      }\n\n      this.states.push(stateMap);\n    }\n\n    return bootstrappedStores;\n  }\n\n  /**\n   * Add a set of states to the store and return the defaults\n   */\n  addAndReturnDefaults(stateClasses: StateClassInternal[]): StatesAndDefaults {\n    const classes: StateClassInternal[] = stateClasses || [];\n\n    const mappedStores: MappedStore[] = this.add(classes);\n    const defaults = mappedStores.reduce(\n      (result: any, mappedStore: MappedStore) =>\n        setValue(result, mappedStore.path, mappedStore.defaults),\n      {}\n    );\n    return { defaults, states: mappedStores };\n  }\n\n  connectActionHandlers(): void {\n    // Note: We have to connect actions only once when the `StateFactory`\n    //       is being created for the first time. This checks if we're in\n    //       a child state factory and the parent state factory already exists.\n    if (this._parentFactory || this._actionsSubscription !== null) {\n      return;\n    }\n\n    const dispatched$ = new Subject<ActionContext>();\n    this._actionsSubscription = this._actions\n      .pipe(\n        filter((ctx: ActionContext) => ctx.status === ActionStatus.Dispatched),\n        mergeMap(ctx => {\n          dispatched$.next(ctx);\n          const action = ctx.action;\n          return this.invokeActions(dispatched$, action!).pipe(\n            map(() => <ActionContext>{ action, status: ActionStatus.Successful }),\n            defaultIfEmpty(<ActionContext>{ action, status: ActionStatus.Canceled }),\n            catchError(error =>\n              of(<ActionContext>{ action, status: ActionStatus.Errored, error })\n            )\n          );\n        })\n      )\n      .subscribe(ctx => this._actionResults.next(ctx));\n  }\n\n  /**\n   * Invoke actions on the states.\n   */\n  invokeActions(dispatched$: Observable<ActionContext>, action: any) {\n    const type = getActionTypeFromInstance(action)!;\n    const results = [];\n\n    // Determines whether the dispatched action has been handled, this is assigned\n    // to `true` within the below `for` loop if any `actionMetas` has been found.\n    let actionHasBeenHandled = false;\n\n    for (const metadata of this.states) {\n      const actionMetas = metadata.actions[type];\n\n      if (actionMetas) {\n        for (const actionMeta of actionMetas) {\n          const stateContext = this._stateContextFactory.createStateContext(metadata);\n          try {\n            let result = metadata.instance[actionMeta.fn](stateContext, action);\n\n            if (result instanceof Promise) {\n              result = from(result);\n            }\n\n            if (isObservable(result)) {\n              // If this observable has been completed w/o emitting\n              // any value then we wouldn't want to complete the whole chain\n              // of actions. Since if any observable completes then\n              // action will be canceled.\n              // For instance if any action handler would've had such statement:\n              // `handler(ctx) { return EMPTY; }`\n              // then the action will be canceled.\n              // See https://github.com/ngxs/store/issues/1568\n              result = result.pipe(\n                mergeMap((value: any) => {\n                  if (value instanceof Promise) {\n                    return from(value);\n                  }\n                  if (isObservable(value)) {\n                    return value;\n                  }\n                  return of(value);\n                }),\n                defaultIfEmpty({})\n              );\n\n              if (actionMeta.options.cancelUncompleted) {\n                // todo: ofActionDispatched should be used with action class\n                result = result.pipe(\n                  takeUntil(dispatched$.pipe(ofActionDispatched(action as any)))\n                );\n              }\n            } else {\n              result = of({}).pipe(shareReplay());\n            }\n\n            results.push(result);\n          } catch (e) {\n            results.push(throwError(e));\n          }\n\n          actionHasBeenHandled = true;\n        }\n      }\n    }\n\n    // The `NgxsUnhandledActionsLogger` is a tree-shakable class which functions\n    // only during development.\n    if (NG_DEV_MODE && !actionHasBeenHandled) {\n      const unhandledActionsLogger = this._injector.get(NgxsUnhandledActionsLogger, null);\n      // The `NgxsUnhandledActionsLogger` will not be resolved by the injector if the\n      // `NgxsDevelopmentModule` is not provided. It's enough to check whether the `injector.get`\n      // didn't return `null` so we may ensure the module has been imported.\n      if (unhandledActionsLogger) {\n        unhandledActionsLogger.warn(action);\n      }\n    }\n\n    if (!results.length) {\n      results.push(of({}));\n    }\n\n    return forkJoin(results);\n  }\n\n  private addToStatesMap(stateClasses: StateClassInternal[]): {\n    newStates: StateClassInternal[];\n  } {\n    const newStates: StateClassInternal[] = [];\n    const statesMap: StatesByName = this.statesByName;\n\n    for (const stateClass of stateClasses) {\n      const stateName = getStoreMetadata(stateClass).name!;\n      if (NG_DEV_MODE) {\n        ensureStateNameIsUnique(stateName, stateClass, statesMap);\n      }\n      const unmountedState = !statesMap[stateName];\n      if (unmountedState) {\n        newStates.push(stateClass);\n        statesMap[stateName] = stateClass;\n      }\n    }\n\n    return { newStates };\n  }\n\n  private addRuntimeInfoToMeta(meta: MetaDataModel, path: string): void {\n    this.statePaths[meta.name!] = path;\n    // TODO: v4 - we plan to get rid of the path property because it is non-deterministic\n    // we can do this when we get rid of the incorrectly exposed getStoreMetadata\n    // We will need to come up with an alternative in v4 because this is used by many plugins\n    meta.path = path;\n  }\n\n  private hasBeenMountedAndBootstrapped(name: string, path: string): boolean {\n    const valueIsBootstrappedInInitialState: boolean =\n      getValue(this._initialState, path) !== undefined;\n    // This checks whether a state has been already added to the global graph and\n    // its lifecycle is in 'bootstrapped' state.\n    return this.statesByName[name] && valueIsBootstrappedInInitialState;\n  }\n}\n","import { memoize } from '@ngxs/store/internals';\n\nimport {\n  getSelectorMetadata,\n  getStoreMetadata,\n  SelectorMetaDataModel,\n  SharedSelectorOptions,\n  RuntimeSelectorContext,\n  SelectorFactory,\n} from '../internal/internals';\nimport { CreationMetadata, RuntimeSelectorInfo } from './selector-models';\n\nexport function createRootSelectorFactory<T extends (...args: any[]) => any>(\n  selectorMetaData: SelectorMetaDataModel,\n  selectors: any[] | undefined,\n  memoizedSelectorFn: T\n): SelectorFactory {\n  return (context: RuntimeSelectorContext) => {\n    const { argumentSelectorFunctions, selectorOptions } = getRuntimeSelectorInfo(\n      context,\n      selectorMetaData,\n      selectors\n    );\n\n    return function selectFromRoot(rootState: any) {\n      // Determine arguments from the app state using the selectors\n      const results = argumentSelectorFunctions.map((argFn) => argFn(rootState));\n\n      // if the lambda tries to access a something on the\n      // state that doesn't exist, it will throw a TypeError.\n      // since this is quite usual behaviour, we simply return undefined if so.\n      try {\n        return memoizedSelectorFn(...results);\n      } catch (ex) {\n        if (ex instanceof TypeError && selectorOptions.suppressErrors) {\n          return undefined;\n        }\n\n        throw ex;\n      }\n    };\n  };\n}\n\nexport function createMemoizedSelectorFn<T extends (...args: any[]) => any>(\n  originalFn: T,\n  creationMetadata: Partial<CreationMetadata> | undefined\n) {\n  const containerClass = creationMetadata && creationMetadata.containerClass;\n  const wrappedFn = function wrappedSelectorFn(...args: any[]) {\n    const returnValue = originalFn.apply(containerClass, args);\n    if (returnValue instanceof Function) {\n      const innerMemoizedFn = memoize.apply(null, [returnValue]);\n      return innerMemoizedFn;\n    }\n    return returnValue;\n  } as T;\n  const memoizedFn = memoize(wrappedFn);\n  Object.setPrototypeOf(memoizedFn, originalFn);\n  return memoizedFn;\n}\n\nfunction getRuntimeSelectorInfo(\n  context: RuntimeSelectorContext,\n  selectorMetaData: SelectorMetaDataModel,\n  selectors: any[] | undefined = []\n): RuntimeSelectorInfo {\n  const localSelectorOptions = selectorMetaData.getSelectorOptions();\n  const selectorOptions = context.getSelectorOptions(localSelectorOptions);\n  const selectorsToApply = getSelectorsToApply(\n    selectors,\n    selectorOptions,\n    selectorMetaData.containerClass\n  );\n\n  const argumentSelectorFunctions = selectorsToApply.map((selector) => {\n    const factory = getRootSelectorFactory(selector);\n    return factory(context);\n  });\n  return {\n    selectorOptions,\n    argumentSelectorFunctions,\n  };\n}\n\nfunction getSelectorsToApply(\n  selectors: any[] | undefined = [],\n  selectorOptions: SharedSelectorOptions,\n  containerClass: any\n) {\n  const selectorsToApply = [];\n  const canInjectContainerState =\n    selectors.length === 0 || selectorOptions.injectContainerState;\n  if (containerClass && canInjectContainerState) {\n    // If we are on a state class, add it as the first selector parameter\n    const metadata = getStoreMetadata(containerClass);\n    if (metadata) {\n      selectorsToApply.push(containerClass);\n    }\n  }\n  if (selectors) {\n    selectorsToApply.push(...selectors);\n  }\n  return selectorsToApply;\n}\n\n/**\n * This function gets the factory function to create the selector to get the selected slice from the app state\n * @ignore\n */\nexport function getRootSelectorFactory(selector: any): SelectorFactory {\n  const metadata = getSelectorMetadata(selector) || getStoreMetadata(selector);\n  return (metadata && metadata.makeRootSelector) || (() => selector);\n}\n","// tslint:disable:unified-signatures\nimport { Inject, Injectable, Optional, Type } from '@angular/core';\nimport { Observable, of, Subscription, throwError } from 'rxjs';\nimport { catchError, distinctUntilChanged, map, shareReplay, take } from 'rxjs/operators';\nimport { INITIAL_STATE_TOKEN, PlainObject } from '@ngxs/store/internals';\n\nimport { InternalNgxsExecutionStrategy } from './execution/internal-ngxs-execution-strategy';\nimport { InternalStateOperations } from './internal/state-operations';\nimport { getRootSelectorFactory } from './selectors/selector-utils';\nimport { StateStream } from './internal/state-stream';\nimport { leaveNgxs } from './operators/leave-ngxs';\nimport { NgxsConfig } from './symbols';\nimport { StateToken } from './state-token/state-token';\nimport { StateFactory } from './internal/state-factory';\n\n@Injectable({ providedIn: 'root' })\nexport class Store {\n  /**\n   * This is a derived state stream that leaves NGXS execution strategy to emit state changes within the Angular zone,\n   * because state is being changed actually within the `<root>` zone, see `InternalDispatcher#dispatchSingle`.\n   * All selects would use this stream, and it would call leave only once for any state change across all active selectors.\n   */\n  private _selectableStateStream = this._stateStream.pipe(\n    leaveNgxs(this._internalExecutionStrategy),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  constructor(\n    private _stateStream: StateStream,\n    private _internalStateOperations: InternalStateOperations,\n    private _config: NgxsConfig,\n    private _internalExecutionStrategy: InternalNgxsExecutionStrategy,\n    private _stateFactory: StateFactory,\n    @Optional()\n    @Inject(INITIAL_STATE_TOKEN)\n    initialStateValue: any\n  ) {\n    this.initStateStream(initialStateValue);\n  }\n\n  /**\n   * Dispatches event(s).\n   */\n  dispatch(actionOrActions: any | any[]): Observable<any> {\n    return this._internalStateOperations.getRootStateOperations().dispatch(actionOrActions);\n  }\n\n  /**\n   * Selects a slice of data from the store.\n   */\n  select<T>(selector: (state: any, ...states: any[]) => T): Observable<T>;\n  select<T = any>(selector: string | Type<any>): Observable<T>;\n  select<T>(selector: StateToken<T>): Observable<T>;\n  select(selector: any): Observable<any> {\n    const selectorFn = this.getStoreBoundSelectorFn(selector);\n    return this._selectableStateStream.pipe(\n      map(selectorFn),\n      catchError((err: Error): Observable<never> | Observable<undefined> => {\n        // if error is TypeError we swallow it to prevent usual errors with property access\n        const { suppressErrors } = this._config.selectorOptions;\n\n        if (err instanceof TypeError && suppressErrors) {\n          return of(undefined);\n        }\n\n        // rethrow other errors\n        return throwError(err);\n      }),\n      distinctUntilChanged(),\n      leaveNgxs(this._internalExecutionStrategy)\n    );\n  }\n\n  /**\n   * Select one slice of data from the store.\n   */\n\n  selectOnce<T>(selector: (state: any, ...states: any[]) => T): Observable<T>;\n  selectOnce<T = any>(selector: string | Type<any>): Observable<T>;\n  selectOnce<T>(selector: StateToken<T>): Observable<T>;\n  selectOnce(selector: any): Observable<any> {\n    return this.select(selector).pipe(take(1));\n  }\n\n  /**\n   * Select a snapshot from the state.\n   */\n  selectSnapshot<T>(selector: (state: any, ...states: any[]) => T): T;\n  selectSnapshot<T = any>(selector: string | Type<any>): T;\n  selectSnapshot<T>(selector: StateToken<T>): T;\n  selectSnapshot(selector: any): any {\n    const selectorFn = this.getStoreBoundSelectorFn(selector);\n    return selectorFn(this._stateStream.getValue());\n  }\n\n  /**\n   * Allow the user to subscribe to the root of the state\n   */\n  subscribe(fn?: (value: any) => void): Subscription {\n    return this._selectableStateStream\n      .pipe(leaveNgxs(this._internalExecutionStrategy))\n      .subscribe(fn);\n  }\n\n  /**\n   * Return the raw value of the state.\n   */\n  snapshot(): any {\n    return this._internalStateOperations.getRootStateOperations().getState();\n  }\n\n  /**\n   * Reset the state to a specific point in time. This method is useful\n   * for plugin's who need to modify the state directly or unit testing.\n   */\n  reset(state: any) {\n    return this._internalStateOperations.getRootStateOperations().setState(state);\n  }\n\n  private getStoreBoundSelectorFn(selector: any) {\n    const makeSelectorFn = getRootSelectorFactory(selector);\n    const runtimeContext = this._stateFactory.getRuntimeSelectorContext();\n    return makeSelectorFn(runtimeContext);\n  }\n\n  private initStateStream(initialStateValue: any): void {\n    const value: PlainObject = this._stateStream.value;\n    const storeIsEmpty: boolean = !value || Object.keys(value).length === 0;\n    if (storeIsEmpty) {\n      const defaultStateNotEmpty: boolean = Object.keys(this._config.defaultsState).length > 0;\n      const storeValues: PlainObject = defaultStateNotEmpty\n        ? { ...this._config.defaultsState, ...initialStateValue }\n        : initialStateValue;\n\n      this._stateStream.next(storeValues);\n    }\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { Store } from '../../store';\nimport { NgxsConfig } from '../../symbols';\n\n/**\n * Allows the select decorator to get access to the DI store, this is used internally\n * in `@Select` decorator.\n */\n@Injectable({ providedIn: 'root' })\nexport class SelectFactory implements OnDestroy {\n  static store: Store | null = null;\n  static config: NgxsConfig | null = null;\n\n  constructor(store: Store, config: NgxsConfig) {\n    SelectFactory.store = store;\n    SelectFactory.config = config;\n  }\n\n  ngOnDestroy(): void {\n    SelectFactory.store = null;\n    SelectFactory.config = null;\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { NgxsBootstrapper } from '@ngxs/store/internals';\nimport { EMPTY, Subject } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  mergeMap,\n  pairwise,\n  startWith,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\n\nimport { Store } from '../store';\nimport { getValue } from '../utils/utils';\nimport { InternalErrorReporter } from './error-handler';\nimport { StateContextFactory } from './state-context-factory';\nimport { InternalStateOperations } from './state-operations';\nimport { MappedStore, StatesAndDefaults } from './internals';\nimport { NgxsLifeCycle, NgxsSimpleChange, StateContext } from '../symbols';\n\n@Injectable({ providedIn: 'root' })\nexport class LifecycleStateManager implements OnDestroy {\n  private readonly _destroy$ = new Subject<void>();\n\n  constructor(\n    private _store: Store,\n    private _internalErrorReporter: InternalErrorReporter,\n    private _internalStateOperations: InternalStateOperations,\n    private _stateContextFactory: StateContextFactory,\n    private _bootstrapper: NgxsBootstrapper\n  ) {}\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n  }\n\n  ngxsBootstrap<T>(action: T, results: StatesAndDefaults | undefined): void {\n    this._internalStateOperations\n      .getRootStateOperations()\n      .dispatch(action)\n      .pipe(\n        filter(() => !!results),\n        tap(() => this._invokeInitOnStates(results!.states)),\n        mergeMap(() => this._bootstrapper.appBootstrapped$),\n        filter(appBootstrapped => !!appBootstrapped),\n        catchError(error => {\n          // The `SafeSubscriber` (which is used by most RxJS operators) re-throws\n          // errors asynchronously (`setTimeout(() => { throw error })`). This might\n          // break existing user's code or unit tests. We catch the error manually to\n          // be backward compatible with the old behavior.\n          this._internalErrorReporter.reportErrorSafely(error);\n          return EMPTY;\n        }),\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => this._invokeBootstrapOnStates(results!.states));\n  }\n\n  private _invokeInitOnStates(mappedStores: MappedStore[]): void {\n    for (const mappedStore of mappedStores) {\n      const instance: NgxsLifeCycle = mappedStore.instance;\n\n      if (instance.ngxsOnChanges) {\n        this._store\n          .select(state => getValue(state, mappedStore.path))\n          .pipe(startWith(undefined), pairwise(), takeUntil(this._destroy$))\n          .subscribe(([previousValue, currentValue]) => {\n            const change = new NgxsSimpleChange(\n              previousValue,\n              currentValue,\n              !mappedStore.isInitialised\n            );\n            instance.ngxsOnChanges!(change);\n          });\n      }\n\n      if (instance.ngxsOnInit) {\n        instance.ngxsOnInit(this._getStateContext(mappedStore));\n      }\n\n      mappedStore.isInitialised = true;\n    }\n  }\n\n  private _invokeBootstrapOnStates(mappedStores: MappedStore[]) {\n    for (const mappedStore of mappedStores) {\n      const instance: NgxsLifeCycle = mappedStore.instance;\n      if (instance.ngxsAfterBootstrap) {\n        instance.ngxsAfterBootstrap(this._getStateContext(mappedStore));\n      }\n    }\n  }\n\n  private _getStateContext(mappedStore: MappedStore): StateContext<any> {\n    return this._stateContextFactory.createStateContext(mappedStore);\n  }\n}\n","import { Inject, NgModule, Optional } from '@angular/core';\n\nimport { StateFactory } from '../internal/state-factory';\nimport { InternalStateOperations } from '../internal/state-operations';\nimport { Store } from '../store';\nimport { SelectFactory } from '../decorators/select/select-factory';\nimport { ROOT_STATE_TOKEN } from '../symbols';\nimport { StateClassInternal, StatesAndDefaults } from '../internal/internals';\nimport { LifecycleStateManager } from '../internal/lifecycle-state-manager';\nimport { InitState } from '../actions/actions';\n\n/**\n * Root module\n * @ignore\n */\n@NgModule()\nexport class NgxsRootModule {\n  constructor(\n    factory: StateFactory,\n    internalStateOperations: InternalStateOperations,\n    _store: Store,\n    _select: SelectFactory,\n    @Optional()\n    @Inject(ROOT_STATE_TOKEN)\n    states: StateClassInternal[] = [],\n    lifecycleStateManager: LifecycleStateManager\n  ) {\n    // Add stores to the state graph and return their defaults\n    const results: StatesAndDefaults = factory.addAndReturnDefaults(states);\n\n    internalStateOperations.setStateToTheCurrentWithNew(results);\n\n    // Connect our actions stream\n    factory.connectActionHandlers();\n\n    // Dispatch the init action and invoke init and bootstrap functions after\n    lifecycleStateManager.ngxsBootstrap(new InitState(), results);\n  }\n}\n","import { Inject, NgModule, Optional } from '@angular/core';\n\nimport { Store } from '../store';\nimport { InternalStateOperations } from '../internal/state-operations';\nimport { StateFactory } from '../internal/state-factory';\nimport { FEATURE_STATE_TOKEN } from '../symbols';\nimport { LifecycleStateManager } from '../internal/lifecycle-state-manager';\nimport { StateClassInternal, StatesAndDefaults } from '../internal/internals';\nimport { UpdateState } from '../actions/actions';\n\n/**\n * Feature module\n * @ignore\n */\n@NgModule()\nexport class NgxsFeatureModule {\n  constructor(\n    _store: Store,\n    internalStateOperations: InternalStateOperations,\n    factory: StateFactory,\n    @Optional()\n    @Inject(FEATURE_STATE_TOKEN)\n    states: StateClassInternal[][] = [],\n    lifecycleStateManager: LifecycleStateManager\n  ) {\n    // Since FEATURE_STATE_TOKEN is a multi token, we need to\n    // flatten it [[Feature1State, Feature2State], [Feature3State]]\n    const flattenedStates: StateClassInternal[] = NgxsFeatureModule.flattenStates(states);\n\n    // add stores to the state graph and return their defaults\n    const results: StatesAndDefaults = factory.addAndReturnDefaults(flattenedStates);\n\n    if (results.states.length) {\n      internalStateOperations.setStateToTheCurrentWithNew(results);\n\n      // dispatch the update action and invoke init and bootstrap functions after\n      lifecycleStateManager.ngxsBootstrap(new UpdateState(results.defaults), results);\n    }\n  }\n\n  private static flattenStates(states: StateClassInternal[][] = []): StateClassInternal[] {\n    return states.reduce(\n      (total: StateClassInternal[], values: StateClassInternal[]) => total.concat(values),\n      []\n    );\n  }\n}\n","import {\n  APP_BOOTSTRAP_LISTENER,\n  ModuleWithProviders,\n  NgModule,\n  Provider\n} from '@angular/core';\nimport {\n  ɵNGXS_STATE_FACTORY,\n  ɵNGXS_STATE_CONTEXT_FACTORY,\n  NgxsBootstrapper,\n  StateClass\n} from '@ngxs/store/internals';\n\nimport {\n  FEATURE_STATE_TOKEN,\n  NgxsModuleOptions,\n  ROOT_OPTIONS,\n  ROOT_STATE_TOKEN\n} from './symbols';\nimport { USER_PROVIDED_NGXS_EXECUTION_STRATEGY } from './execution/symbols';\nimport { StateFactory } from './internal/state-factory';\nimport { StateContextFactory } from './internal/state-context-factory';\nimport { PluginManager } from './plugin-manager';\nimport { NgxsRootModule } from './modules/ngxs-root.module';\nimport { NgxsFeatureModule } from './modules/ngxs-feature.module';\n\n/**\n * Ngxs Module\n */\n@NgModule()\nexport class NgxsModule {\n  /**\n   * Root module factory\n   */\n  static forRoot(\n    states: StateClass[] = [],\n    options: NgxsModuleOptions = {}\n  ): ModuleWithProviders<NgxsRootModule> {\n    return {\n      ngModule: NgxsRootModule,\n      providers: [\n        StateFactory,\n        PluginManager,\n        ...states,\n        ...NgxsModule.ngxsTokenProviders(states, options)\n      ]\n    };\n  }\n\n  /**\n   * Feature module factory\n   */\n  static forFeature(states: StateClass[] = []): ModuleWithProviders<NgxsFeatureModule> {\n    return {\n      ngModule: NgxsFeatureModule,\n      providers: [\n        // This is required on the feature level, see comments in `state-factory.ts`.\n        StateFactory,\n        PluginManager,\n        ...states,\n        {\n          provide: FEATURE_STATE_TOKEN,\n          multi: true,\n          useValue: states\n        }\n      ]\n    };\n  }\n\n  private static ngxsTokenProviders(\n    states: StateClass[],\n    options: NgxsModuleOptions\n  ): Provider[] {\n    return [\n      {\n        provide: USER_PROVIDED_NGXS_EXECUTION_STRATEGY,\n        useValue: options.executionStrategy\n      },\n      {\n        provide: ROOT_STATE_TOKEN,\n        useValue: states\n      },\n      {\n        provide: ROOT_OPTIONS,\n        useValue: options\n      },\n      {\n        provide: APP_BOOTSTRAP_LISTENER,\n        useFactory: NgxsModule.appBootstrapListenerFactory,\n        multi: true,\n        deps: [NgxsBootstrapper]\n      },\n      {\n        provide: ɵNGXS_STATE_CONTEXT_FACTORY,\n        useExisting: StateContextFactory\n      },\n      {\n        provide: ɵNGXS_STATE_FACTORY,\n        useExisting: StateFactory\n      }\n    ];\n  }\n\n  private static appBootstrapListenerFactory(bootstrapper: NgxsBootstrapper): Function {\n    return () => bootstrapper.bootstrap();\n  }\n}\n","import { ensureStoreMetadata } from '../internal/internals';\nimport { ActionType, ActionOptions } from '../actions/symbols';\nimport { throwActionDecoratorError } from '../configs/messages.config';\n\n/**\n * Decorates a method with a action information.\n */\nexport function Action(\n  actions: ActionType | ActionType[],\n  options?: ActionOptions\n): MethodDecorator {\n  return (target: any, name: string | symbol): void => {\n    // Caretaker note: we have still left the `typeof` condition in order to avoid\n    // creating a breaking change for projects that still use the View Engine.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const isStaticMethod = target.hasOwnProperty('prototype');\n\n      if (isStaticMethod) {\n        throwActionDecoratorError();\n      }\n    }\n\n    const meta = ensureStoreMetadata(target.constructor);\n\n    if (!Array.isArray(actions)) {\n      actions = [actions];\n    }\n\n    for (const action of actions) {\n      const type = action.type;\n\n      if (!meta.actions[type]) {\n        meta.actions[type] = [];\n      }\n\n      meta.actions[type].push({\n        fn: name,\n        options: options || {},\n        type\n      });\n    }\n  };\n}\n","import { StateClass } from '@ngxs/store/internals';\n\nimport { ensureStateNameIsValid } from '../utils/store-validators';\nimport { META_KEY, META_OPTIONS_KEY, StoreOptions } from '../symbols';\nimport { ensureStoreMetadata, MetaDataModel, StateClassInternal } from '../internal/internals';\n\ninterface MutateMetaOptions<T> {\n  meta: MetaDataModel;\n  inheritedStateClass: StateClassInternal;\n  optionsWithInheritance: StoreOptions<T>;\n}\n\n/**\n * Decorates a class with ngxs state information.\n */\nexport function State<T>(options: StoreOptions<T>) {\n  return (target: StateClass): void => {\n    const stateClass: StateClassInternal = target;\n    const meta: MetaDataModel = ensureStoreMetadata(stateClass);\n    const inheritedStateClass: StateClassInternal = Object.getPrototypeOf(stateClass);\n    const optionsWithInheritance: StoreOptions<T> = getStateOptions(\n      inheritedStateClass,\n      options\n    );\n    mutateMetaData<T>({ meta, inheritedStateClass, optionsWithInheritance });\n    stateClass[META_OPTIONS_KEY] = optionsWithInheritance;\n  };\n}\n\nfunction getStateOptions<T>(\n  inheritedStateClass: StateClassInternal,\n  options: StoreOptions<T>\n): StoreOptions<T> {\n  const inheritanceOptions: Partial<StoreOptions<T>> =\n    inheritedStateClass[META_OPTIONS_KEY] || {};\n  return { ...inheritanceOptions, ...options } as StoreOptions<T>;\n}\n\nfunction mutateMetaData<T>(params: MutateMetaOptions<T>): void {\n  const { meta, inheritedStateClass, optionsWithInheritance } = params;\n  const { children, defaults, name } = optionsWithInheritance;\n  const stateName: string | null =\n    typeof name === 'string' ? name : (name && name.getName()) || null;\n\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ensureStateNameIsValid(stateName);\n  }\n\n  if (inheritedStateClass.hasOwnProperty(META_KEY)) {\n    const inheritedMeta: Partial<MetaDataModel> = inheritedStateClass[META_KEY] || {};\n    meta.actions = { ...meta.actions, ...inheritedMeta.actions };\n  }\n\n  meta.children = children;\n  meta.defaults = defaults;\n  meta.name = stateName;\n}\n","import { Observable } from 'rxjs';\n\nimport { propGetter } from '../../internal/internals';\nimport { SelectFactory } from './select-factory';\nimport { StateToken } from '../../state-token/state-token';\nimport { ExtractTokenType } from '../../state-token/symbols';\nimport { throwSelectFactoryNotConnectedError } from '../../configs/messages.config';\n\nconst DOLLAR_CHAR_CODE = 36;\n\nexport function createSelectObservable<T = any>(selector: any): Observable<T> {\n  if (!SelectFactory.store) {\n    throwSelectFactoryNotConnectedError();\n  }\n  return SelectFactory.store!.select(selector);\n}\n\nexport function createSelectorFn(name: string, rawSelector?: any, paths: string[] = []): any {\n  rawSelector = !rawSelector ? removeDollarAtTheEnd(name) : rawSelector;\n\n  if (typeof rawSelector === 'string') {\n    const propsArray: string[] = paths.length\n      ? [rawSelector, ...paths]\n      : rawSelector.split('.');\n    return propGetter(propsArray, SelectFactory.config!);\n  }\n\n  return rawSelector;\n}\n\n/**\n * @example If `foo$` => make it just `foo`\n */\nexport function removeDollarAtTheEnd(name: string): string {\n  const lastCharIndex: number = name.length - 1;\n  const dollarAtTheEnd: boolean = name.charCodeAt(lastCharIndex) === DOLLAR_CHAR_CODE;\n  return dollarAtTheEnd ? name.slice(0, lastCharIndex) : name;\n}\n\nexport type PropertyType<T> = T extends StateToken<any>\n  ? Observable<ExtractTokenType<T>>\n  : T extends (...args: any[]) => any\n  ? Observable<ReturnType<T>>\n  : any;\n","import { createSelectObservable, createSelectorFn, PropertyType } from './symbols';\n\n/**\n * Decorator for selecting a slice of state from the store.\n */\nexport function Select<T>(rawSelector?: T, ...paths: string[]): PropertyDecorator {\n  return function(target, key): void {\n    const name: string = key.toString();\n    const selectorId = `__${name}__selector`;\n    const selector = createSelectorFn(name, rawSelector, paths);\n\n    Object.defineProperties(target, {\n      [selectorId]: {\n        writable: true,\n        enumerable: false,\n        configurable: true\n      },\n      [name]: {\n        enumerable: true,\n        configurable: true,\n        get(): PropertyType<T> {\n          return this[selectorId] || (this[selectorId] = createSelectObservable(selector));\n        }\n      }\n    });\n  };\n}\n","import {\n  ensureSelectorMetadata,\n  SelectorMetaDataModel,\n  SharedSelectorOptions,\n} from '../internal/internals';\nimport { CreationMetadata } from './selector-models';\n\nconst SELECTOR_OPTIONS_META_KEY = 'NGXS_SELECTOR_OPTIONS_META';\n\nexport const selectorOptionsMetaAccessor = {\n  getOptions: (target: any): SharedSelectorOptions => {\n    return (target && (<any>target)[SELECTOR_OPTIONS_META_KEY]) || {};\n  },\n  defineOptions: (target: any, options: SharedSelectorOptions) => {\n    if (!target) return;\n    (<any>target)[SELECTOR_OPTIONS_META_KEY] = options;\n  },\n};\n\nexport function setupSelectorMetadata<T extends (...args: any[]) => any>(\n  originalFn: T,\n  creationMetadata: Partial<CreationMetadata> | undefined\n) {\n  const selectorMetaData = ensureSelectorMetadata(originalFn);\n  selectorMetaData.originalFn = originalFn;\n  let getExplicitSelectorOptions = () => ({});\n  if (creationMetadata) {\n    selectorMetaData.containerClass = creationMetadata.containerClass;\n    selectorMetaData.selectorName = creationMetadata.selectorName || null;\n    getExplicitSelectorOptions =\n      creationMetadata.getSelectorOptions || getExplicitSelectorOptions;\n  }\n  const selectorMetaDataClone = { ...selectorMetaData };\n  selectorMetaData.getSelectorOptions = () =>\n    getLocalSelectorOptions(selectorMetaDataClone, getExplicitSelectorOptions());\n  return selectorMetaData;\n}\n\nfunction getLocalSelectorOptions(\n  selectorMetaData: SelectorMetaDataModel,\n  explicitOptions: SharedSelectorOptions\n): SharedSelectorOptions {\n  return {\n    ...(selectorOptionsMetaAccessor.getOptions(selectorMetaData.containerClass) || {}),\n    ...(selectorOptionsMetaAccessor.getOptions(selectorMetaData.originalFn) || {}),\n    ...(selectorMetaData.getSelectorOptions() || {}),\n    ...explicitOptions,\n  };\n}\n","import { SharedSelectorOptions } from '../internal/internals';\nimport { selectorOptionsMetaAccessor } from '../selectors/selector-metadata';\n\n/**\n * Decorator for setting selector options at a method or class level.\n */\nexport function SelectorOptions(options: SharedSelectorOptions) {\n  return <ClassDecorator & MethodDecorator>(\n    function decorate<T>(\n      target: any,\n      methodName: string,\n      descriptor: TypedPropertyDescriptor<T>\n    ) {\n      if (methodName) {\n        descriptor ||= Object.getOwnPropertyDescriptor(target, methodName)!;\n        // Method Decorator\n        const originalFn = descriptor.value || (<any>descriptor).originalFn;\n        if (originalFn) {\n          selectorOptionsMetaAccessor.defineOptions(originalFn, options);\n        }\n      } else {\n        // Class Decorator\n        selectorOptionsMetaAccessor.defineOptions(target, options);\n      }\n    }\n  );\n}\n","import {\n  getSelectorMetadata as getSelectorMetadataInternal,\n  getStoreMetadata as getStoreMetadataInternal,\n  ensureStoreMetadata as ensureStoreMetadataInternal,\n  ensureSelectorMetadata as ensureSelectorMetadataInternal,\n  StateClassInternal,\n  SharedSelectorOptions\n} from './internal/internals';\nimport { PlainObjectOf } from '../internals/src/symbols';\nimport { ActionHandlerMetaData } from './actions/symbols';\n\ninterface MetaDataModel {\n  name: string | null;\n  actions: PlainObjectOf<ActionHandlerMetaData[]>;\n  defaults: any;\n  path: string | null;\n  // selectFromAppState: SelectFromState | null;\n  // makeRootSelector: SelectorFactory | null; // Don't expose new stuff\n  children?: StateClassInternal[];\n}\n\ninterface SelectorMetaDataModel {\n  // selectFromAppState: SelectFromState | null;\n  // makeRootSelector: SelectorFactory | null; // Don't expose new stuff\n  originalFn: Function | null;\n  containerClass: any;\n  selectorName: string | null;\n  getSelectorOptions: () => SharedSelectorOptions;\n}\n\nexport function ensureStoreMetadata(target: StateClassInternal<any, any>): MetaDataModel {\n  return ensureStoreMetadataInternal(target);\n}\n\nexport function getStoreMetadata(target: StateClassInternal<any, any>): MetaDataModel {\n  return getStoreMetadataInternal(target);\n}\n\nexport function ensureSelectorMetadata(target: Function): SelectorMetaDataModel {\n  return ensureSelectorMetadataInternal(target);\n}\n\nexport function getSelectorMetadata(target: any): SelectorMetaDataModel {\n  return getSelectorMetadataInternal(target);\n}\n","import { CreationMetadata } from './selector-models';\nimport { setupSelectorMetadata } from './selector-metadata';\nimport { createMemoizedSelectorFn, createRootSelectorFactory } from './selector-utils';\n\nimport { SelectorDef, SelectorReturnType } from './selector-types.util';\n\ntype SelectorArg = SelectorDef<any>;\n\n/**\n * Function for creating a selector\n * @param selectors The selectors to use to create the arguments of this function\n * @param originalFn The original function being made into a selector\n * @param creationMetadata\n */\nexport function createSelector<\n  S1 extends SelectorArg,\n  TProjector extends (s1: SelectorReturnType<S1>) => any\n>(\n  selectors: [S1],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<\n  S1 extends SelectorArg,\n  S2 extends SelectorArg,\n  TProjector extends (s1: SelectorReturnType<S1>, s2: SelectorReturnType<S2>) => any\n>(\n  selectors: [S1, S2],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<\n  S1 extends SelectorArg,\n  S2 extends SelectorArg,\n  S3 extends SelectorArg,\n  TProjector extends (\n    s1: SelectorReturnType<S1>,\n    s2: SelectorReturnType<S2>,\n    s3: SelectorReturnType<S3>\n  ) => any\n>(\n  selectors: [S1, S2, S3],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<\n  S1 extends SelectorArg,\n  S2 extends SelectorArg,\n  S3 extends SelectorArg,\n  S4 extends SelectorArg,\n  TProjector extends (\n    s1: SelectorReturnType<S1>,\n    s2: SelectorReturnType<S2>,\n    s3: SelectorReturnType<S3>,\n    s4: SelectorReturnType<S4>\n  ) => any\n>(\n  selectors: [S1, S2, S3, S4],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<\n  S1 extends SelectorArg,\n  S2 extends SelectorArg,\n  S3 extends SelectorArg,\n  S4 extends SelectorArg,\n  S5 extends SelectorArg,\n  TProjector extends (\n    s1: SelectorReturnType<S1>,\n    s2: SelectorReturnType<S2>,\n    s3: SelectorReturnType<S3>,\n    s4: SelectorReturnType<S4>,\n    s5: SelectorReturnType<S5>\n  ) => any\n>(\n  selectors: [S1, S2, S3, S4, S5],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<\n  S1 extends SelectorArg,\n  S2 extends SelectorArg,\n  S3 extends SelectorArg,\n  S4 extends SelectorArg,\n  S5 extends SelectorArg,\n  S6 extends SelectorArg,\n  TProjector extends (\n    s1: SelectorReturnType<S1>,\n    s2: SelectorReturnType<S2>,\n    s3: SelectorReturnType<S3>,\n    s4: SelectorReturnType<S4>,\n    s5: SelectorReturnType<S5>,\n    s6: SelectorReturnType<S6>\n  ) => any\n>(\n  selectors: [S1, S2, S3, S4, S5, S6],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<\n  S1 extends SelectorArg,\n  S2 extends SelectorArg,\n  S3 extends SelectorArg,\n  S4 extends SelectorArg,\n  S5 extends SelectorArg,\n  S6 extends SelectorArg,\n  S7 extends SelectorArg,\n  TProjector extends (\n    s1: SelectorReturnType<S1>,\n    s2: SelectorReturnType<S2>,\n    s3: SelectorReturnType<S3>,\n    s4: SelectorReturnType<S4>,\n    s5: SelectorReturnType<S5>,\n    s6: SelectorReturnType<S6>,\n    s7: SelectorReturnType<S7>\n  ) => any\n>(\n  selectors: [S1, S2, S3, S4, S5, S6, S7],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<\n  S1 extends SelectorArg,\n  S2 extends SelectorArg,\n  S3 extends SelectorArg,\n  S4 extends SelectorArg,\n  S5 extends SelectorArg,\n  S6 extends SelectorArg,\n  S7 extends SelectorArg,\n  S8 extends SelectorArg,\n  TProjector extends (\n    s1: SelectorReturnType<S1>,\n    s2: SelectorReturnType<S2>,\n    s3: SelectorReturnType<S3>,\n    s4: SelectorReturnType<S4>,\n    s5: SelectorReturnType<S5>,\n    s6: SelectorReturnType<S6>,\n    s7: SelectorReturnType<S7>,\n    s8: SelectorReturnType<S8>\n  ) => any\n>(\n  selectors: [S1, S2, S3, S4, S5, S6, S7, S8],\n  projector: TProjector,\n  creationMetadata?: Partial<CreationMetadata>\n): TProjector;\n\nexport function createSelector<T extends (...args: any[]) => any>(\n  selectors: SelectorArg[] | undefined,\n  projector: T,\n  creationMetadata?: Partial<CreationMetadata>\n): T;\n\nexport function createSelector<T extends (...args: any[]) => any>(\n  selectors: SelectorArg[] | undefined,\n  projector: T,\n  creationMetadata?: Partial<CreationMetadata>\n) {\n  const memoizedFn = createMemoizedSelectorFn<T>(projector, creationMetadata);\n\n  const selectorMetaData = setupSelectorMetadata<T>(projector, creationMetadata);\n\n  selectorMetaData.makeRootSelector = createRootSelectorFactory<T>(\n    selectorMetaData,\n    selectors,\n    memoizedFn\n  );\n\n  return memoizedFn;\n}\n","import { throwSelectorDecoratorError } from '../../configs/messages.config';\nimport { SelectorDef } from '../../selectors';\nimport { createSelector } from '../../selectors/create-selector';\nimport { SelectorSpec, SelectorType } from './symbols';\n\n/**\n * Decorator for creating a state selector for the current state.\n */\nexport function Selector(): SelectorType<unknown>;\n\n/**\n * Decorator for creating a state selector from the provided selectors (and optionally the container State, depending on the applicable Selector Options).\n */\nexport function Selector<T extends SelectorDef<any>>(selectors: T[]): SelectorType<T>;\n\nexport function Selector<T extends SelectorDef<any>>(selectors?: T[]): SelectorType<T> {\n  return <U>(\n    target: any,\n    key: string | symbol,\n    descriptor: TypedPropertyDescriptor<SelectorSpec<T, U>>\n  ): TypedPropertyDescriptor<SelectorSpec<T, U>> | void => {\n    descriptor ||= Object.getOwnPropertyDescriptor(target, key)!;\n\n    const originalFn = descriptor?.value;\n\n    // Caretaker note: we have still left the `typeof` condition in order to avoid\n    // creating a breaking change for projects that still use the View Engine.\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (originalFn && typeof originalFn !== 'function') {\n        throwSelectorDecoratorError();\n      }\n    }\n\n    const memoizedFn = createSelector(selectors, originalFn as any, {\n      containerClass: target,\n      selectorName: key.toString(),\n      getSelectorOptions() {\n        return {};\n      },\n    });\n    const newDescriptor = {\n      configurable: true,\n      get() {\n        return memoizedFn;\n      },\n    };\n    // Add hidden property to descriptor\n    (<any>newDescriptor)['originalFn'] = originalFn;\n    return newDescriptor;\n  };\n}\n","import { TokenName } from './symbols';\nimport {\n  ensureSelectorMetadata,\n  RuntimeSelectorContext,\n  SelectFromRootState\n} from '../internal/internals';\n\nexport class StateToken<T = void> {\n  constructor(private readonly name: TokenName<T>) {\n    const selectorMetadata = ensureSelectorMetadata(<any>this);\n    selectorMetadata.makeRootSelector = (\n      runtimeContext: RuntimeSelectorContext\n    ): SelectFromRootState => {\n      return runtimeContext.getStateGetter(this.name);\n    };\n  }\n\n  getName(): string {\n    return this.name;\n  }\n\n  toString(): string {\n    return `StateToken[${this.name}]`;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgxsDevelopmentOptions, NGXS_DEVELOPMENT_OPTIONS } from './symbols';\nimport { NgxsUnhandledActionsLogger } from './ngxs-unhandled-actions-logger';\n\n@NgModule()\nexport class NgxsDevelopmentModule {\n  static forRoot(options: NgxsDevelopmentOptions): ModuleWithProviders<NgxsDevelopmentModule> {\n    return {\n      ngModule: NgxsDevelopmentModule,\n      providers: [\n        NgxsUnhandledActionsLogger,\n        { provide: NGXS_DEVELOPMENT_OPTIONS, useValue: options }\n      ]\n    };\n  }\n}\n","import { getSelectorMetadata, getStoreMetadata } from '../internal/internals';\nimport { SelectorDef } from './selector-types.util';\n\nexport function ensureValidSelector(\n  selector: SelectorDef<any>,\n  context: { prefix?: string; noun?: string } = {}\n) {\n  const noun = context.noun || 'selector';\n  const prefix = context.prefix ? context.prefix + ': ' : '';\n  ensureValueProvided(selector, { noun, prefix: context.prefix });\n  const metadata = getSelectorMetadata(selector) || getStoreMetadata(selector as any);\n  if (!metadata) {\n    throw new Error(`${prefix}The value provided as the ${noun} is not a valid selector.`);\n  }\n}\n\nexport function ensureValueProvided(\n  value: any,\n  context: { prefix?: string; noun?: string } = {}\n) {\n  const noun = context.noun || 'value';\n  const prefix = context.prefix ? context.prefix + ': ' : '';\n  if (!value) {\n    throw new Error(`${prefix}A ${noun} must be provided.`);\n  }\n}\n","import { createSelector } from './create-selector';\nimport { ensureValidSelector, ensureValueProvided } from './selector-checks.util';\nimport { TypedSelector } from './selector-types.util';\n\ninterface SelectorMap {\n  [key: string]: TypedSelector<any>;\n}\n\ntype ModelSelector<T extends SelectorMap> = (...args: any[]) => MappedResult<T>;\n\ntype MappedResult<TSelectorMap> = {\n  [P in keyof TSelectorMap]: TSelectorMap[P] extends TypedSelector<infer R> ? R : never;\n};\n\nexport function createModelSelector<T extends SelectorMap>(selectorMap: T): ModelSelector<T> {\n  const selectorKeys = Object.keys(selectorMap);\n  const selectors = Object.values(selectorMap);\n\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ensureValidSelectorMap<T>({\n      prefix: '[createModelSelector]',\n      selectorMap,\n      selectorKeys,\n      selectors\n    });\n  }\n\n  return createSelector(selectors, (...args) => {\n    return selectorKeys.reduce((obj, key, index) => {\n      (obj as any)[key] = args[index];\n      return obj;\n    }, {} as MappedResult<T>);\n  }) as ModelSelector<T>;\n}\n\nfunction ensureValidSelectorMap<T extends SelectorMap>({\n  prefix,\n  selectorMap,\n  selectorKeys,\n  selectors\n}: {\n  prefix: string;\n  selectorMap: T;\n  selectorKeys: string[];\n  selectors: TypedSelector<any>[];\n}) {\n  ensureValueProvided(selectorMap, { prefix, noun: 'selector map' });\n  ensureValueProvided(typeof selectorMap === 'object', { prefix, noun: 'valid selector map' });\n  ensureValueProvided(selectorKeys.length, { prefix, noun: 'non-empty selector map' });\n  selectors.forEach((selector, index) =>\n    ensureValidSelector(selector, {\n      prefix,\n      noun: `selector for the '${selectorKeys[index]}' property`\n    })\n  );\n}\n","import { createSelector } from './create-selector';\nimport { ensureValidSelector } from './selector-checks.util';\nimport { TypedSelector } from './selector-types.util';\n\ntype KeysToValues<T, Keys extends (keyof T)[]> = {\n  [Index in keyof Keys]: Keys[Index] extends keyof T ? T[Keys[Index]] : never;\n};\n\nexport function createPickSelector<TModel, Keys extends (keyof TModel)[]>(\n  selector: TypedSelector<TModel>,\n  keys: [...Keys]\n) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ensureValidSelector(selector, { prefix: '[createPickSelector]' });\n  }\n  const validKeys = keys.filter(Boolean);\n  const selectors = validKeys.map(key => createSelector([selector], (s: TModel) => s[key]));\n  return createSelector([...selectors], (...props: KeysToValues<TModel, Keys>) => {\n    return validKeys.reduce((acc, key, index) => {\n      acc[key] = props[index];\n      return acc;\n    }, {} as Pick<TModel, Keys[number]>);\n  });\n}\n","import { createSelector } from './create-selector';\nimport { ensureValidSelector } from './selector-checks.util';\nimport { SelectorDef } from './selector-types.util';\n\nexport type PropertySelectors<TModel> = {\n  [P in keyof NonNullable<TModel>]-?: (\n    model: TModel\n  ) => TModel extends null | undefined ? undefined : NonNullable<TModel>[P];\n};\n\nexport function createPropertySelectors<TModel>(\n  parentSelector: SelectorDef<TModel>\n): PropertySelectors<TModel> {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ensureValidSelector(parentSelector, {\n      prefix: '[createPropertySelectors]',\n      noun: 'parent selector'\n    });\n  }\n  const cache: Partial<PropertySelectors<TModel>> = {};\n  return new Proxy<PropertySelectors<TModel>>(\n    {} as unknown as PropertySelectors<TModel>,\n    {\n      get(_target: any, prop: keyof TModel) {\n        const selector =\n          cache[prop] ||\n          (createSelector(\n            [parentSelector],\n            (s: TModel) => s?.[prop]\n          ) as PropertySelectors<TModel>[typeof prop]);\n        cache[prop] = selector;\n        return selector;\n      }\n    } as ProxyHandler<PropertySelectors<TModel>>\n  );\n}\n","/**\n * The public api for consumers of @ngxs/store\n */\nexport * from './src/public_api';\n\n/**\n * The plugin api for the stuff that a plugins needs\n */\nexport * from './src/plugin_api';\n\n/**\n * Private exports required for the Ivy compilation.\n */\nexport * from './src/private_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["isObject","isPlatformServer","NgZone","i0","PLATFORM_ID","Injectable","Inject","InjectionToken","inject","INJECTOR","ɵglobal","ensureStoreMetadata","getStoreMetadata","ensureSelectorMetadata","getSelectorMetadata","filter","map","Observable","Subject","BehaviorSubject","share","i1.InternalNgxsExecutionStrategy","ErrorHandler","Optional","SkipSelf","of","forkJoin","throwError","shareReplay","take","exhaustMap","EMPTY","i2.PluginManager","i3.StateStream","i4.InternalNgxsExecutionStrategy","i5.InternalErrorReporter","i1.StateStream","i2.InternalDispatcher","i3.NgxsConfig","isStateOperator","i1.InternalStateOperations","memoize","mergeMap","defaultIfEmpty","catchError","from","isObservable","takeUntil","i1.NgxsConfig","i2.InternalActions","i3.InternalDispatchedActionResults","i4.StateContextFactory","INITIAL_STATE_TOKEN","distinctUntilChanged","i1.Store","i2.NgxsConfig","tap","startWith","pairwise","i2.InternalErrorReporter","i3.InternalStateOperations","i5","i5.LifecycleStateManager","NgModule","i4.LifecycleStateManager","APP_BOOTSTRAP_LISTENER","NgxsBootstrapper","ɵNGXS_STATE_CONTEXT_FACTORY","ɵNGXS_STATE_FACTORY","ensureStoreMetadataInternal","getStoreMetadataInternal","ensureSelectorMetadataInternal","getSelectorMetadataInternal"],"mappings":"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"}