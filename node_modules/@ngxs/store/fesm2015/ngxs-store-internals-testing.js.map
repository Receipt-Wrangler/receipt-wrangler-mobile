{"version":3,"file":"ngxs-store-internals-testing.js","sources":["../../../packages/store/internals/testing/src/helpers/ngxs-test.component.ts","../../../packages/store/internals/testing/src/helpers/ngxs-test.module.ts","../../../packages/store/internals/testing/src/ngxs.setup.ts","../../../packages/store/internals/testing/src/fresh-platform.ts","../../../packages/store/internals/testing/src/skip-console-logging.ts","../../../packages/store/internals/testing/src/ngxs-store-internals-testing.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: ''\n})\nexport class NgxsTestComponent implements OnInit, AfterViewInit {\n  public ngOnInit(): void {}\n  public ngAfterViewInit(): void {}\n}\n","import { ApplicationRef, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgxsTestComponent } from './ngxs-test.component';\n\n@NgModule({\n  imports: [BrowserModule],\n  declarations: [NgxsTestComponent],\n  entryComponents: [NgxsTestComponent]\n})\nexport class NgxsTestModule {\n  public static ngDoBootstrap(app: ApplicationRef): void {\n    app.bootstrap(NgxsTestComponent);\n  }\n}\n","import { ApplicationRef } from '@angular/core';\nimport { TestBed, TestBedStatic } from '@angular/core/testing';\nimport { DOCUMENT } from '@angular/common';\nimport { ɵBrowserDomAdapter as BrowserDomAdapter } from '@angular/platform-browser';\nimport {\n  BrowserDynamicTestingModule,\n  platformBrowserDynamicTesting\n} from '@angular/platform-browser-dynamic/testing';\nimport { NgxsModule, Store } from '@ngxs/store';\n\nimport { NgxsTestModule } from './helpers/ngxs-test.module';\nimport { NgxsOptionsTesting, NgxsTesting } from './symbol';\n\nexport class NgxsTestBed {\n  public static configureTestingStates(options: NgxsOptionsTesting): NgxsTesting {\n    this.resetTestBed();\n\n    if (options.before) {\n      options.before();\n    }\n\n    TestBed.configureTestingModule({\n      imports: [\n        NgxsTestModule,\n        NgxsModule.forRoot(options.states || [], options.ngxsOptions || {}),\n        ...(options.imports || [])\n      ]\n    }).compileComponents();\n\n    NgxsTestBed.ngxsBootstrap();\n\n    return {\n      get store(): Store {\n        return TestBed.inject(Store);\n      },\n      get getTestBed(): TestBedStatic {\n        return TestBed;\n      }\n    };\n  }\n\n  private static ngxsBootstrap(): void {\n    NgxsTestBed.createRootNode();\n    NgxsTestModule.ngDoBootstrap(TestBed.inject(ApplicationRef));\n  }\n\n  private static resetTestBed(): void {\n    TestBed.resetTestEnvironment();\n    TestBed.initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting());\n  }\n\n  private static createRootNode(selector = 'app-root'): void {\n    const document = TestBed.inject(DOCUMENT);\n    const adapter = new BrowserDomAdapter();\n    const root = adapter.createElement(selector);\n    document.body.appendChild(root);\n  }\n}\n","import { TestBed } from '@angular/core/testing';\nimport { DOCUMENT } from '@angular/common';\nimport { ɵgetDOM as getDOM } from '@angular/platform-browser';\nimport { VERSION, destroyPlatform, createPlatform } from '@angular/core';\n\nfunction createRootElement() {\n  const document = TestBed.inject(DOCUMENT);\n  const root = getDOM().createElement('app-root', document);\n  document.body.appendChild(root);\n}\n\nfunction removeRootElement() {\n  const root: Element = document.getElementsByTagName('app-root').item(0)!;\n  try {\n    document.body.removeChild(root);\n  } catch {}\n}\n\nfunction destroyPlatformBeforeBootstrappingTheNewOne() {\n  destroyPlatform();\n  createRootElement();\n}\n\n// As we create our custom platform via `bootstrapModule`\n// we have to destroy it after assetions and revert\n// the previous one\nfunction resetPlatformAfterBootstrapping() {\n  removeRootElement();\n  destroyPlatform();\n  const version = +VERSION.major;\n  // https://github.com/angular/angular/commit/e250db4f261741b04ee4cbad4dec41a8908a12aa\n  if (version < 14) {\n    createPlatform(TestBed);\n  }\n}\n\nexport function freshPlatform(fn: (done?: VoidFunction) => Promise<void>) {\n  let resolve: VoidFunction | null = null;\n  let reject: ((error: Error) => void) | null = null;\n  let whenDoneIsCalledPromise: Promise<void> | null = null;\n\n  const hasDoneArgument = fn.length === 1;\n\n  if (hasDoneArgument) {\n    whenDoneIsCalledPromise = new Promise<void>((_resolve, _reject) => {\n      resolve = _resolve;\n      reject = _reject;\n    });\n  }\n\n  return async function testWithAFreshPlatform() {\n    try {\n      destroyPlatformBeforeBootstrappingTheNewOne();\n\n      if (hasDoneArgument) {\n        await fn((error?: Error) => {\n          if (error) {\n            reject!(error);\n          } else {\n            resolve!();\n          }\n        });\n        await whenDoneIsCalledPromise!;\n      } else {\n        await fn();\n      }\n    } finally {\n      resetPlatformAfterBootstrapping();\n    }\n  };\n}\n","/// <reference types=\"jest\" />\n\nexport function skipConsoleLogging<T extends (...args: any[]) => any>(fn: T): ReturnType<T> {\n  const consoleSpies = [\n    jest.spyOn(console, 'log').mockImplementation(() => {}),\n    jest.spyOn(console, 'warn').mockImplementation(() => {}),\n    jest.spyOn(console, 'error').mockImplementation(() => {}),\n    jest.spyOn(console, 'info').mockImplementation(() => {})\n  ];\n  function restoreSpies() {\n    consoleSpies.forEach(spy => spy.mockRestore());\n  }\n  let restoreSpyAsync = false;\n  try {\n    const returnValue = fn();\n    if (returnValue instanceof Promise) {\n      restoreSpyAsync = true;\n      return returnValue.finally(() => restoreSpies()) as ReturnType<T>;\n    }\n    return returnValue;\n  } finally {\n    if (!restoreSpyAsync) {\n      restoreSpies();\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["BrowserDomAdapter","getDOM"],"mappings":"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"}