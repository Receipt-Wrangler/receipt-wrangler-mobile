import { Store } from '../store';
import { InternalStateOperations } from '../internal/state-operations';
import { StateFactory } from '../internal/state-factory';
import { LifecycleStateManager } from '../internal/lifecycle-state-manager';
import { StateClassInternal } from '../internal/internals';
import * as i0 from "@angular/core";
/**
 * Feature module
 * @ignore
 */
export declare class NgxsFeatureModule {
    constructor(_store: Store, internalStateOperations: InternalStateOperations, factory: StateFactory, states: StateClassInternal<any, any>[][] | undefined, lifecycleStateManager: LifecycleStateManager);
    private static flattenStates;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxsFeatureModule, [null, null, null, { optional: true; }, null]>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgxsFeatureModule, never, never, never>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgxsFeatureModule>;
}
