import { TypedSelector } from './selector-types.util';
interface SelectorMap {
    [key: string]: TypedSelector<any>;
}
declare type ModelSelector<T extends SelectorMap> = (...args: any[]) => MappedResult<T>;
declare type MappedResult<TSelectorMap> = {
    [P in keyof TSelectorMap]: TSelectorMap[P] extends TypedSelector<infer R> ? R : never;
};
export declare function createModelSelector<T extends SelectorMap>(selectorMap: T): ModelSelector<T>;
export {};
