import { ModuleWithProviders } from '@angular/core';
import { StateClass } from '@ngxs/store/internals';
import { NgxsModuleOptions } from './symbols';
import { NgxsRootModule } from './modules/ngxs-root.module';
import { NgxsFeatureModule } from './modules/ngxs-feature.module';
import * as i0 from "@angular/core";
/**
 * Ngxs Module
 */
export declare class NgxsModule {
    /**
     * Root module factory
     */
    static forRoot(states?: StateClass[], options?: NgxsModuleOptions): ModuleWithProviders<NgxsRootModule>;
    /**
     * Feature module factory
     */
    static forFeature(states?: StateClass[]): ModuleWithProviders<NgxsFeatureModule>;
    private static ngxsTokenProviders;
    private static appBootstrapListenerFactory;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxsModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgxsModule, never, never, never>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgxsModule>;
}
