import { isPlatformServer } from '@angular/common';
/**
 * The following key is used to store the entire serialized
 * state when there's no specific state provided.
 */
export const DEFAULT_STATE_KEY = '@@STATE';
export function storageOptionsFactory(options) {
    return Object.assign({ key: [DEFAULT_STATE_KEY], storage: 0 /* LocalStorage */, serialize: JSON.stringify, deserialize: JSON.parse, beforeSerialize: obj => obj, afterDeserialize: obj => obj }, options);
}
export function engineFactory(options, platformId) {
    if (isPlatformServer(platformId)) {
        return null;
    }
    if (options.storage === 0 /* LocalStorage */) {
        return localStorage;
    }
    else if (options.storage === 1 /* SessionStorage */) {
        return sessionStorage;
    }
    return null;
}
export function getStorageKey(key, options) {
    // Prepends the `namespace` option to any key if it's been provided by a user.
    // So `@@STATE` becomes `my-app:@@STATE`.
    return options && options.namespace ? `${options.namespace}:${key}` : key;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJuYWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcGFja2FnZXMvc3RvcmFnZS1wbHVnaW4vc3JjL2ludGVybmFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUluRDs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxTQUFTLENBQUM7QUFFM0MsTUFBTSxVQUFVLHFCQUFxQixDQUNuQyxPQUE2QztJQUU3Qyx1QkFDRSxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxFQUN4QixPQUFPLHdCQUNQLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUN6QixXQUFXLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFDdkIsZUFBZSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUMzQixnQkFBZ0IsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFDekIsT0FBTyxFQUNWO0FBQ0osQ0FBQztBQUVELE1BQU0sVUFBVSxhQUFhLENBQzNCLE9BQWlDLEVBQ2pDLFVBQWtCO0lBRWxCLElBQUksZ0JBQWdCLENBQUMsVUFBVSxDQUFDLEVBQUU7UUFDaEMsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUVELElBQUksT0FBTyxDQUFDLE9BQU8seUJBQStCLEVBQUU7UUFDbEQsT0FBTyxZQUFZLENBQUM7S0FDckI7U0FBTSxJQUFJLE9BQU8sQ0FBQyxPQUFPLDJCQUFpQyxFQUFFO1FBQzNELE9BQU8sY0FBYyxDQUFDO0tBQ3ZCO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsTUFBTSxVQUFVLGFBQWEsQ0FBQyxHQUFXLEVBQUUsT0FBa0M7SUFDM0UsOEVBQThFO0lBQzlFLHlDQUF5QztJQUN6QyxPQUFPLE9BQU8sSUFBSSxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxTQUFTLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUM1RSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNQbGF0Zm9ybVNlcnZlciB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IFN0b3JhZ2VPcHRpb24sIFN0b3JhZ2VFbmdpbmUsIE5neHNTdG9yYWdlUGx1Z2luT3B0aW9ucyB9IGZyb20gJy4vc3ltYm9scyc7XG5cbi8qKlxuICogVGhlIGZvbGxvd2luZyBrZXkgaXMgdXNlZCB0byBzdG9yZSB0aGUgZW50aXJlIHNlcmlhbGl6ZWRcbiAqIHN0YXRlIHdoZW4gdGhlcmUncyBubyBzcGVjaWZpYyBzdGF0ZSBwcm92aWRlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfU1RBVEVfS0VZID0gJ0BAU1RBVEUnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RvcmFnZU9wdGlvbnNGYWN0b3J5KFxuICBvcHRpb25zOiBOZ3hzU3RvcmFnZVBsdWdpbk9wdGlvbnMgfCB1bmRlZmluZWRcbik6IE5neHNTdG9yYWdlUGx1Z2luT3B0aW9ucyB7XG4gIHJldHVybiB7XG4gICAga2V5OiBbREVGQVVMVF9TVEFURV9LRVldLFxuICAgIHN0b3JhZ2U6IFN0b3JhZ2VPcHRpb24uTG9jYWxTdG9yYWdlLFxuICAgIHNlcmlhbGl6ZTogSlNPTi5zdHJpbmdpZnksXG4gICAgZGVzZXJpYWxpemU6IEpTT04ucGFyc2UsXG4gICAgYmVmb3JlU2VyaWFsaXplOiBvYmogPT4gb2JqLFxuICAgIGFmdGVyRGVzZXJpYWxpemU6IG9iaiA9PiBvYmosXG4gICAgLi4ub3B0aW9uc1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZW5naW5lRmFjdG9yeShcbiAgb3B0aW9uczogTmd4c1N0b3JhZ2VQbHVnaW5PcHRpb25zLFxuICBwbGF0Zm9ybUlkOiBzdHJpbmdcbik6IFN0b3JhZ2VFbmdpbmUgfCBudWxsIHtcbiAgaWYgKGlzUGxhdGZvcm1TZXJ2ZXIocGxhdGZvcm1JZCkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmIChvcHRpb25zLnN0b3JhZ2UgPT09IFN0b3JhZ2VPcHRpb24uTG9jYWxTdG9yYWdlKSB7XG4gICAgcmV0dXJuIGxvY2FsU3RvcmFnZTtcbiAgfSBlbHNlIGlmIChvcHRpb25zLnN0b3JhZ2UgPT09IFN0b3JhZ2VPcHRpb24uU2Vzc2lvblN0b3JhZ2UpIHtcbiAgICByZXR1cm4gc2Vzc2lvblN0b3JhZ2U7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN0b3JhZ2VLZXkoa2V5OiBzdHJpbmcsIG9wdGlvbnM/OiBOZ3hzU3RvcmFnZVBsdWdpbk9wdGlvbnMpOiBzdHJpbmcge1xuICAvLyBQcmVwZW5kcyB0aGUgYG5hbWVzcGFjZWAgb3B0aW9uIHRvIGFueSBrZXkgaWYgaXQncyBiZWVuIHByb3ZpZGVkIGJ5IGEgdXNlci5cbiAgLy8gU28gYEBAU1RBVEVgIGJlY29tZXMgYG15LWFwcDpAQFNUQVRFYC5cbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5uYW1lc3BhY2UgPyBgJHtvcHRpb25zLm5hbWVzcGFjZX06JHtrZXl9YCA6IGtleTtcbn1cbiJdfQ==