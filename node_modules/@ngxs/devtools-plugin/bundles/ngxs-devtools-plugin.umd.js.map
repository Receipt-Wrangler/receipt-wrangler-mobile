{"version":3,"file":"ngxs-devtools-plugin.umd.js","sources":["../../../packages/devtools-plugin/src/symbols.ts","../../../packages/devtools-plugin/src/devtools.plugin.ts","../../../packages/devtools-plugin/src/devtools.module.ts","../../../packages/devtools-plugin/index.ts","../../../packages/devtools-plugin/ngxs-devtools-plugin.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Interface for the redux-devtools-extension API.\n */\nexport interface NgxsDevtoolsExtension {\n  init(state: any): void;\n  send(action: any, state?: any): void;\n  subscribe(fn: (message: NgxsDevtoolsAction) => void): VoidFunction;\n}\n\nexport interface NgxsDevtoolsAction {\n  type: string;\n  payload: any;\n  state: any;\n  id: number;\n  source: string;\n}\n\nexport interface NgxsDevtoolsOptions {\n  /**\n   * The name of the extension\n   */\n  name?: string;\n\n  /**\n   * Whether the dev tools is enabled or note. Useful for setting during production.\n   */\n  disabled?: boolean;\n\n  /**\n   * Max number of entiries to keep.\n   */\n  maxAge?: number;\n\n  /**\n   * If more than one action is dispatched in the indicated interval, all new actions will be collected\n   * and sent at once. It is the joint between performance and speed. When set to 0, all actions will be\n   * sent instantly. Set it to a higher value when experiencing perf issues (also maxAge to a lower value).\n   * Default is 500 ms.\n   */\n  latency?: number;\n\n  /**\n   * string or array of strings as regex - actions types to be hidden in the monitors (while passed to the reducers).\n   * If actionsWhitelist specified, actionsBlacklist is ignored.\n   */\n  actionsBlacklist?: string | string[];\n\n  /**\n   * string or array of strings as regex - actions types to be shown in the monitors (while passed to the reducers).\n   * If actionsWhitelist specified, actionsBlacklist is ignored.\n   */\n  actionsWhitelist?: string | string[];\n\n  /**\n   * called for every action before sending, takes state and action object, and returns true in case it allows\n   * sending the current data to the monitor. Use it as a more advanced version of\n   * actionsBlacklist/actionsWhitelist parameters\n   */\n  predicate?: (state: any, action: any) => boolean;\n\n  /**\n   * Reformat actions before sending to dev tools\n   */\n  actionSanitizer?: (action: any) => void;\n\n  /**\n   * Reformat state before sending to devtools\n   */\n  stateSanitizer?: (state: any) => void;\n\n  /**\n   * If set to true, will include stack trace for every dispatched action\n   */\n  trace?: boolean | (() => string);\n\n  /**\n   * Maximum stack trace frames to be stored (in case trace option was provided as true)\n   */\n  traceLimit?: number;\n}\n\nexport const NGXS_DEVTOOLS_OPTIONS = new InjectionToken('NGXS_DEVTOOLS_OPTIONS');\n","import { Inject, Injectable, Injector, NgZone, OnDestroy, ɵglobal } from '@angular/core';\nimport {\n  InitState,\n  getActionTypeFromInstance,\n  NgxsNextPluginFn,\n  NgxsPlugin,\n  Store\n} from '@ngxs/store';\nimport { tap, catchError } from 'rxjs/operators';\n\nimport {\n  NGXS_DEVTOOLS_OPTIONS,\n  NgxsDevtoolsAction,\n  NgxsDevtoolsExtension,\n  NgxsDevtoolsOptions\n} from './symbols';\n\nconst enum ReduxDevtoolsActionType {\n  Dispatch = 'DISPATCH',\n  Action = 'ACTION'\n}\n\nconst enum ReduxDevtoolsPayloadType {\n  JumpToAction = 'JUMP_TO_ACTION',\n  JumpToState = 'JUMP_TO_STATE',\n  ToggleAction = 'TOGGLE_ACTION',\n  ImportState = 'IMPORT_STATE'\n}\n\n/**\n * Adds support for the Redux Devtools extension:\n * http://extension.remotedev.io/\n */\n@Injectable()\nexport class NgxsReduxDevtoolsPlugin implements OnDestroy, NgxsPlugin {\n  private devtoolsExtension: NgxsDevtoolsExtension | null = null;\n  private readonly globalDevtools =\n    ɵglobal['__REDUX_DEVTOOLS_EXTENSION__'] || ɵglobal['devToolsExtension'];\n\n  private unsubscribe: VoidFunction | null = null;\n\n  constructor(\n    @Inject(NGXS_DEVTOOLS_OPTIONS) private _options: NgxsDevtoolsOptions,\n    private _injector: Injector,\n    private _ngZone: NgZone\n  ) {\n    this.connect();\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribe !== null) {\n      this.unsubscribe();\n    }\n    if (this.globalDevtools) {\n      this.globalDevtools.disconnect();\n    }\n  }\n\n  /**\n   * Lazy get the store for circular dependency issues\n   */\n  private get store(): Store {\n    return this._injector.get<Store>(Store);\n  }\n\n  /**\n   * Middleware handle function\n   */\n  handle(state: any, action: any, next: NgxsNextPluginFn) {\n    if (!this.devtoolsExtension || this._options.disabled) {\n      return next(state, action);\n    }\n\n    return next(state, action).pipe(\n      catchError(error => {\n        const newState = this.store.snapshot();\n        this.sendToDevTools(state, action, newState);\n        throw error;\n      }),\n      tap(newState => {\n        this.sendToDevTools(state, action, newState);\n      })\n    );\n  }\n\n  private sendToDevTools(state: any, action: any, newState: any) {\n    const type = getActionTypeFromInstance(action);\n    // if init action, send initial state to dev tools\n    const isInitAction = type === InitState.type;\n    if (isInitAction) {\n      this.devtoolsExtension!.init(state);\n    } else {\n      this.devtoolsExtension!.send({ ...action, action: null, type }, newState);\n    }\n  }\n\n  /**\n   * Handle the action from the dev tools subscription\n   */\n  dispatched(action: NgxsDevtoolsAction) {\n    if (action.type === ReduxDevtoolsActionType.Dispatch) {\n      if (\n        action.payload.type === ReduxDevtoolsPayloadType.JumpToAction ||\n        action.payload.type === ReduxDevtoolsPayloadType.JumpToState\n      ) {\n        const prevState = JSON.parse(action.state);\n        // This makes the DevTools and Router plugins compatible with each other.\n        // We check for the existence of the `router` state and ensure it has the\n        // `trigger` property, confirming that it is our router state (coming from `@ngxs/router-plugin`).\n        // This enables a time-traveling feature, as it not only restores the state but\n        // also allows the `RouterState` to navigate back when the action is jumped.\n        if (prevState.router && prevState.router.trigger) {\n          prevState.router.trigger = 'devtools';\n        }\n        this.store.reset(prevState);\n      } else if (action.payload.type === ReduxDevtoolsPayloadType.ToggleAction) {\n        console.warn('Skip is not supported at this time.');\n      } else if (action.payload.type === ReduxDevtoolsPayloadType.ImportState) {\n        const { actionsById, computedStates, currentStateIndex } =\n          action.payload.nextLiftedState;\n        this.devtoolsExtension!.init(computedStates[0].state);\n        Object.keys(actionsById)\n          .filter(actionId => actionId !== '0')\n          .forEach(actionId =>\n            this.devtoolsExtension!.send(actionsById[actionId], computedStates[actionId].state)\n          );\n        this.store.reset(computedStates[currentStateIndex].state);\n      }\n    } else if (action.type === ReduxDevtoolsActionType.Action) {\n      const actionPayload = JSON.parse(action.payload);\n      this.store.dispatch(actionPayload);\n    }\n  }\n\n  private connect(): void {\n    if (!this.globalDevtools || this._options.disabled) {\n      return;\n    }\n\n    // The `connect` method adds a `message` event listener to communicate\n    // with an extension through `window.postMessage` and handle message events.\n    // Since we only handle two specific events, we aim to avoid unnecessary change\n    // detections triggered by events that the extension sends, but we don't need to handle.\n    this.devtoolsExtension = this._ngZone.runOutsideAngular(\n      () => <NgxsDevtoolsExtension>this.globalDevtools.connect(this._options)\n    );\n\n    this.unsubscribe = this.devtoolsExtension.subscribe(action => {\n      if (\n        action.type === ReduxDevtoolsActionType.Dispatch ||\n        action.type === ReduxDevtoolsActionType.Action\n      ) {\n        this.dispatched(action);\n      }\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\n\nimport { NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS } from './symbols';\nimport { NgxsReduxDevtoolsPlugin } from './devtools.plugin';\n\nexport function devtoolsOptionsFactory(options: NgxsDevtoolsOptions) {\n  return {\n    name: 'NGXS',\n    ...options\n  };\n}\n\nexport const USER_OPTIONS = new InjectionToken('USER_OPTIONS');\n\n@NgModule()\nexport class NgxsReduxDevtoolsPluginModule {\n  static forRoot(\n    options?: NgxsDevtoolsOptions\n  ): ModuleWithProviders<NgxsReduxDevtoolsPluginModule> {\n    return {\n      ngModule: NgxsReduxDevtoolsPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsReduxDevtoolsPlugin,\n          multi: true\n        },\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_DEVTOOLS_OPTIONS,\n          useFactory: devtoolsOptionsFactory,\n          deps: [USER_OPTIONS]\n        }\n      ]\n    };\n  }\n}\n","/**\n * The public api for consumers of @ngxs/devtools-plugin\n */\nexport * from './src/public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InjectionToken","ɵglobal","Store","catchError","tap","getActionTypeFromInstance","InitState","i0","Injectable","Inject","NGXS_PLUGINS","NgModule"],"mappings":"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"}