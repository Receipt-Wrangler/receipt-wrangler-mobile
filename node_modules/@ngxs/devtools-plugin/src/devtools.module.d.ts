import { ModuleWithProviders, InjectionToken } from '@angular/core';
import { NgxsDevtoolsOptions } from './symbols';
import * as i0 from "@angular/core";
export declare function devtoolsOptionsFactory(options: NgxsDevtoolsOptions): {
    name: string;
    disabled?: boolean | undefined;
    maxAge?: number | undefined;
    latency?: number | undefined;
    actionsBlacklist?: string | string[] | undefined;
    actionsWhitelist?: string | string[] | undefined;
    predicate?: ((state: any, action: any) => boolean) | undefined;
    actionSanitizer?: ((action: any) => void) | undefined;
    stateSanitizer?: ((state: any) => void) | undefined;
    trace?: boolean | (() => string) | undefined;
    traceLimit?: number | undefined;
};
export declare const USER_OPTIONS: InjectionToken<unknown>;
export declare class NgxsReduxDevtoolsPluginModule {
    static forRoot(options?: NgxsDevtoolsOptions): ModuleWithProviders<NgxsReduxDevtoolsPluginModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxsReduxDevtoolsPluginModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<NgxsReduxDevtoolsPluginModule, never, never, never>;
    static ɵinj: i0.ɵɵInjectorDeclaration<NgxsReduxDevtoolsPluginModule>;
}
