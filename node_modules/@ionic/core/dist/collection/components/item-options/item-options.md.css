/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
ion-item-options {
  /* stylelint-disable property-disallowed-list */
  top: 0;
  right: 0;
  /* stylelint-enable property-disallowed-list */
  justify-content: flex-end;
  display: none;
  position: absolute;
  height: 100%;
  user-select: none;
  z-index: 1;
}
:host-context([dir=rtl]) ion-item-options {
  justify-content: flex-start;
}
:host-context([dir=rtl]) ion-item-options:not(.item-options-end) {
  /* stylelint-disable property-disallowed-list */
  right: auto;
  left: 0;
  /* stylelint-enable property-disallowed-list */
  justify-content: flex-end;
}

[dir=rtl] ion-item-options {
  justify-content: flex-start;
}
[dir=rtl] ion-item-options:not(.item-options-end) {
  /* stylelint-disable property-disallowed-list */
  right: auto;
  left: 0;
  /* stylelint-enable property-disallowed-list */
  justify-content: flex-end;
}

@supports selector(:dir(rtl)) {
  ion-item-options:dir(rtl) {
    justify-content: flex-start;
  }
  ion-item-options:dir(rtl):not(.item-options-end) {
    /* stylelint-disable property-disallowed-list */
    right: auto;
    left: 0;
    /* stylelint-enable property-disallowed-list */
    justify-content: flex-end;
  }
}

.item-options-start {
  /* stylelint-disable property-disallowed-list */
  right: auto;
  left: 0;
  /* stylelint-enable property-disallowed-list */
  justify-content: flex-start;
}
:host-context([dir=rtl]) .item-options-start {
  justify-content: flex-end;
}

[dir=rtl] .item-options-start {
  justify-content: flex-end;
}

@supports selector(:dir(rtl)) {
  .item-options-start:dir(rtl) {
    justify-content: flex-end;
  }
}

/* stylelint-disable property-disallowed-list */
[dir=ltr] .item-options-start ion-item-option:first-child,
[dir=rtl] .item-options-start ion-item-option:last-child {
  padding-left: var(--ion-safe-area-left);
}

[dir=ltr] .item-options-end ion-item-option:last-child,
[dir=rtl] .item-options-end ion-item-option:first-child {
  padding-right: var(--ion-safe-area-right);
}

/* stylelint-enable property-disallowed-list */
:host-context([dir=rtl]) .item-sliding-active-slide.item-sliding-active-options-start ion-item-options:not(.item-options-end) {
  width: 100%;
  visibility: visible;
}

[dir=rtl] .item-sliding-active-slide.item-sliding-active-options-start ion-item-options:not(.item-options-end) {
  width: 100%;
  visibility: visible;
}

@supports selector(:dir(rtl)) {
  .item-sliding-active-slide:dir(rtl).item-sliding-active-options-start ion-item-options:not(.item-options-end) {
    width: 100%;
    visibility: visible;
  }
}
.item-sliding-active-slide ion-item-options {
  display: flex;
  visibility: hidden;
}
.item-sliding-active-slide.item-sliding-active-options-start .item-options-start, .item-sliding-active-slide.item-sliding-active-options-end ion-item-options:not(.item-options-start) {
  width: 100%;
  visibility: visible;
}

/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
/**
 * Convert a font size to a dynamic font size.
 * Fonts that participate in Dynamic Type should use
 * dynamic font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param unit (optional) - The unit to convert to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a maximum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * a minimum font size.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * Convert a font size to a dynamic font size but impose
 * maximum and minimum font sizes.
 * @param size - The initial font size including the unit (i.e. px or pt)
 * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).
 * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).
 * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to
 * convert to a unit other than $baselineUnit.
 */
/**
 * A heuristic that applies CSS to tablet
 * viewports.
 *
 * Usage:
 * @include tablet-viewport() {
 *   :host {
 *     background-color: green;
 *   }
 * }
 */
/**
 * A heuristic that applies CSS to mobile
 * viewports (i.e. phones, not tablets).
 *
 * Usage:
 * @include mobile-viewport() {
 *   :host {
 *     background-color: blue;
 *   }
 * }
 */
.item-options-md {
  border-bottom-width: 0;
  border-bottom-style: solid;
  border-bottom-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));
}

.list-md-lines-none .item-options-md {
  border-bottom-width: 0;
}

.list-md-lines-full .item-options-md,
.list-md-lines-inset .item-options-md.item-options-end {
  border-bottom-width: 1px;
}