import { __decorate } from "tslib";
import { Directive } from '@angular/core';
import { ProxyCmp, proxyOutputs } from '../../utils/proxy';
import * as i0 from "@angular/core";
import * as i1 from "../../providers/angular-delegate";
const NAV_INPUTS = ['animated', 'animation', 'root', 'rootParams', 'swipeGesture'];
const NAV_METHODS = [
    'push',
    'insert',
    'insertPages',
    'pop',
    'popTo',
    'popToRoot',
    'removeIndex',
    'setRoot',
    'setPages',
    'getActive',
    'getByIndex',
    'canGoBack',
    'getPrevious',
];
let IonNav = class IonNav {
    constructor(ref, environmentInjector, injector, angularDelegate, z, c) {
        this.z = z;
        c.detach();
        this.el = ref.nativeElement;
        ref.nativeElement.delegate = angularDelegate.create(environmentInjector, injector);
        proxyOutputs(this, this.el, ['ionNavDidChange', 'ionNavWillChange']);
    }
};
/** @nocollapse */ IonNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IonNav, deps: [{ token: i0.ElementRef }, { token: i0.EnvironmentInjector }, { token: i0.Injector }, { token: i1.AngularDelegate }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
/** @nocollapse */ IonNav.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.2.12", type: IonNav, inputs: { animated: "animated", animation: "animation", root: "root", rootParams: "rootParams", swipeGesture: "swipeGesture" }, ngImport: i0 });
IonNav = __decorate([
    ProxyCmp({
        inputs: NAV_INPUTS,
        methods: NAV_METHODS,
    })
], IonNav);
export { IonNav };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IonNav, decorators: [{
            type: Directive,
            args: [{
                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property
                    inputs: NAV_INPUTS,
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.EnvironmentInjector }, { type: i0.Injector }, { type: i1.AngularDelegate }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29tbW9uL3NyYy9kaXJlY3RpdmVzL25hdmlnYXRpb24vbmF2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQXdFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUloSCxPQUFPLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7QUFFM0QsTUFBTSxVQUFVLEdBQUcsQ0FBQyxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsY0FBYyxDQUFDLENBQUM7QUFFbkYsTUFBTSxXQUFXLEdBQUc7SUFDbEIsTUFBTTtJQUNOLFFBQVE7SUFDUixhQUFhO0lBQ2IsS0FBSztJQUNMLE9BQU87SUFDUCxXQUFXO0lBQ1gsYUFBYTtJQUNiLFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXO0lBQ1gsYUFBYTtDQUNkLENBQUM7SUFjVyxNQUFNLFNBQU4sTUFBTTtJQUVqQixZQUNFLEdBQWUsRUFDZixtQkFBd0MsRUFDeEMsUUFBa0IsRUFDbEIsZUFBZ0MsRUFDdEIsQ0FBUyxFQUNuQixDQUFvQjtRQURWLE1BQUMsR0FBRCxDQUFDLENBQVE7UUFHbkIsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ1gsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDO1FBQzVCLEdBQUcsQ0FBQyxhQUFhLENBQUMsUUFBUSxHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDbkYsWUFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7Q0FDRixDQUFBO3VIQWZZLE1BQU07MkdBQU4sTUFBTTtBQUFOLE1BQU07SUFUbEIsUUFBUSxDQUFDO1FBQ1IsTUFBTSxFQUFFLFVBQVU7UUFDbEIsT0FBTyxFQUFFLFdBQVc7S0FDckIsQ0FBQztHQU1XLE1BQU0sQ0FlbEI7U0FmWSxNQUFNOzRGQUFOLE1BQU07a0JBTGxCLFNBQVM7bUJBQUM7b0JBQ1QsdUVBQXVFO29CQUN2RSxNQUFNLEVBQUUsVUFBVTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBJbmplY3RvciwgRW52aXJvbm1lbnRJbmplY3RvciwgTmdab25lLCBDaGFuZ2VEZXRlY3RvclJlZiwgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7IENvbXBvbmVudHMgfSBmcm9tICdAaW9uaWMvY29yZSc7XG5cbmltcG9ydCB7IEFuZ3VsYXJEZWxlZ2F0ZSB9IGZyb20gJy4uLy4uL3Byb3ZpZGVycy9hbmd1bGFyLWRlbGVnYXRlJztcbmltcG9ydCB7IFByb3h5Q21wLCBwcm94eU91dHB1dHMgfSBmcm9tICcuLi8uLi91dGlscy9wcm94eSc7XG5cbmNvbnN0IE5BVl9JTlBVVFMgPSBbJ2FuaW1hdGVkJywgJ2FuaW1hdGlvbicsICdyb290JywgJ3Jvb3RQYXJhbXMnLCAnc3dpcGVHZXN0dXJlJ107XG5cbmNvbnN0IE5BVl9NRVRIT0RTID0gW1xuICAncHVzaCcsXG4gICdpbnNlcnQnLFxuICAnaW5zZXJ0UGFnZXMnLFxuICAncG9wJyxcbiAgJ3BvcFRvJyxcbiAgJ3BvcFRvUm9vdCcsXG4gICdyZW1vdmVJbmRleCcsXG4gICdzZXRSb290JyxcbiAgJ3NldFBhZ2VzJyxcbiAgJ2dldEFjdGl2ZScsXG4gICdnZXRCeUluZGV4JyxcbiAgJ2NhbkdvQmFjaycsXG4gICdnZXRQcmV2aW91cycsXG5dO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWludGVyZmFjZVxuZXhwb3J0IGRlY2xhcmUgaW50ZXJmYWNlIElvbk5hdiBleHRlbmRzIENvbXBvbmVudHMuSW9uTmF2IHt9XG5cbkBQcm94eUNtcCh7XG4gIGlucHV0czogTkFWX0lOUFVUUyxcbiAgbWV0aG9kczogTkFWX01FVEhPRFMsXG59KVxuQERpcmVjdGl2ZSh7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvbm8taW5wdXRzLW1ldGFkYXRhLXByb3BlcnR5XG4gIGlucHV0czogTkFWX0lOUFVUUyxcbn0pXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2RpcmVjdGl2ZS1jbGFzcy1zdWZmaXhcbmV4cG9ydCBjbGFzcyBJb25OYXYge1xuICBwcm90ZWN0ZWQgZWw6IEhUTUxFbGVtZW50O1xuICBjb25zdHJ1Y3RvcihcbiAgICByZWY6IEVsZW1lbnRSZWYsXG4gICAgZW52aXJvbm1lbnRJbmplY3RvcjogRW52aXJvbm1lbnRJbmplY3RvcixcbiAgICBpbmplY3RvcjogSW5qZWN0b3IsXG4gICAgYW5ndWxhckRlbGVnYXRlOiBBbmd1bGFyRGVsZWdhdGUsXG4gICAgcHJvdGVjdGVkIHo6IE5nWm9uZSxcbiAgICBjOiBDaGFuZ2VEZXRlY3RvclJlZlxuICApIHtcbiAgICBjLmRldGFjaCgpO1xuICAgIHRoaXMuZWwgPSByZWYubmF0aXZlRWxlbWVudDtcbiAgICByZWYubmF0aXZlRWxlbWVudC5kZWxlZ2F0ZSA9IGFuZ3VsYXJEZWxlZ2F0ZS5jcmVhdGUoZW52aXJvbm1lbnRJbmplY3RvciwgaW5qZWN0b3IpO1xuICAgIHByb3h5T3V0cHV0cyh0aGlzLCB0aGlzLmVsLCBbJ2lvbk5hdkRpZENoYW5nZScsICdpb25OYXZXaWxsQ2hhbmdlJ10pO1xuICB9XG59XG4iXX0=